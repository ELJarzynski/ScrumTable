{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/kamil/Desktop/UczenieMaszynowe/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/kamil/Desktop/UczenieMaszynowe/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/kamil/Desktop/UczenieMaszynowe/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      editedBoardName: '',\n      editedBoardId: null,\n      editBoardModalVisible: false,\n      editedBoardDescription: '',\n      editedBoardDueDate: '',\n      boards: [],\n      boardUserCounts: {},\n      userModalActive: false,\n      currentUserList: [],\n      currentBoardId: null,\n      userId: null,\n      newUserId: '',\n      addUserModalActive: false\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBoards();\n  },\n  methods: {\n    fetchBoards: function fetchBoards() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _iterator, _step, board;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://127.0.0.1:8000/board/list_board/');\n            case 3:\n              response = _context.sent;\n              _this.boards = response.data;\n\n              // Po pobraniu listy tablic, dla każdej tablicy pobierz liczbę użytkowników\n              _iterator = _createForOfIteratorHelper(_this.boards);\n              _context.prev = 6;\n              _iterator.s();\n            case 8:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 14;\n                break;\n              }\n              board = _step.value;\n              _context.next = 12;\n              return _this.fetchBoardUsers(board.id);\n            case 12:\n              _context.next = 8;\n              break;\n            case 14:\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](6);\n              _iterator.e(_context.t0);\n            case 19:\n              _context.prev = 19;\n              _iterator.f();\n              return _context.finish(19);\n            case 22:\n              _context.next = 27;\n              break;\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('Error fetching boards:', _context.t1);\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 24], [6, 16, 19, 22]]);\n      }))();\n    },\n    deleteBoard: function deleteBoard(boardId) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var confirmed;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              confirmed = window.confirm('Are you sure you want to delete this board?');\n              if (!confirmed) {\n                _context2.next = 6;\n                break;\n              }\n              _context2.next = 5;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/board/\".concat(boardId, \"/delete_board/\"));\n            case 5:\n              _this2.fetchBoards();\n            case 6:\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error deleting board:', _context2.t0);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    updateBoard: function updateBoard() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.put(\"http://127.0.0.1:8000/board/\".concat(_this3.editedBoardId, \"/edit_board/\"), {\n                name: _this3.editedBoardName,\n                description: _this3.editedBoardDescription,\n                due_date: _this3.editedBoardDueDate\n              });\n            case 3:\n              console.log('Board updated successfully');\n              _this3.closeEditBoardModal();\n              _this3.fetchBoards();\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error updating board:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    openBoard: function openBoard(boardId) {\n      this.$router.push(\"/section-table/\".concat(boardId, \"/create_section\"));\n    },\n    openEditBoardModal: function openEditBoardModal(board) {\n      this.editBoardModalVisible = true;\n      this.editedBoardId = board.id;\n      this.editedBoardName = board.name;\n      this.editedBoardDescription = board.description;\n    },\n    closeEditBoardModal: function closeEditBoardModal() {\n      this.editBoardModalVisible = false;\n    },\n    // zliczanie ilosci ziutków przypisanych do tablicy\n    fetchBoardUsers: function fetchBoardUsers(boardId) {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/users/\"));\n            case 3:\n              response = _context4.sent;\n              _this4.boardUserCounts[boardId] = response.data.length;\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error fetching board users:', _context4.t0);\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 7]]);\n      }))();\n    },\n    getBoardUserCount: function getBoardUserCount(boardId) {\n      return this.boardUserCounts[boardId] || 0;\n    },\n    openUserModal: function openUserModal(boardId) {\n      this.userModalActive = true;\n      this.currentBoardId = boardId;\n      this.fetchBoardUsersList(boardId); // Dodaj to wywołanie, aby pobrać użytkowników tablicy\n    },\n    closeUserModal: function closeUserModal() {\n      this.userModalActive = false;\n      this.currentBoardId = null;\n      this.currentUserList = [];\n    },\n    // wyswietlenie ziutków tablicy nie działa\n    fetchBoardUsersList: function fetchBoardUsersList(boardId) {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/users/\"));\n            case 3:\n              response = _context5.sent;\n              _this5.currentUserList = response.data.map(function (user) {\n                return {\n                  id: user.user_id,\n                  // Ustawiamy user_id jako id\n                  email: user.user_detail.email\n                };\n              });\n              console.log('Current User List:', _this5.currentUserList); // Dodaj to logowanie\n              // Przypisz pierwszego użytkownika z listy jako aktualnie wybranego użytkownika\n              if (response.data.length > 0) {\n                _this5.userId = response.data[0].user_id;\n              }\n              _context5.next = 12;\n              break;\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error fetching board users:', _context5.t0);\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 9]]);\n      }))();\n    },\n    openAddUserModal: function openAddUserModal() {\n      this.addUserModalActive = true;\n    },\n    closeAddUserModal: function closeAddUserModal() {\n      this.addUserModalActive = false;\n      this.newUserId = ''; // Wyczyszczenie pola po zamknięciu modala\n    },\n    addUserToBoard: function addUserToBoard() {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var boardId, userId;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              boardId = _this6.currentBoardId;\n              userId = _this6.newUserId; // Wykonanie zapytania HTTP do dodania użytkownika do tablicy\n              _context6.next = 5;\n              return axios.post(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/add_user/\"), {\n                user: userId\n              });\n            case 5:\n              _context6.next = 7;\n              return _this6.fetchBoardUsersList(boardId);\n            case 7:\n              _this6.fetchBoards();\n              // Zamknięcie modala po dodaniu użytkownika\n              _this6.closeAddUserModal();\n              _context6.next = 14;\n              break;\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error adding user to board:', _context6.t0);\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 11]]);\n      }))();\n    },\n    deleteUserFromBoard: function deleteUserFromBoard(boardId, user) {\n      var _this7 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var userId;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              console.log(\"User:\", user); // Dodajmy to logowanie\n              userId = user.user_id; // Pobierz user_id z obiektu user\n              // Wykonanie zapytania HTTP do usunięcia użytkownika z tablicy\n              _context7.next = 5;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/board/\".concat(boardId, \"/delete_user/?user_id=\").concat(userId));\n            case 5:\n              _context7.next = 7;\n              return _this7.fetchBoardUsersList(boardId);\n            case 7:\n              _context7.next = 12;\n              break;\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('Error deleting user from board:', _context7.t0);\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 9]]);\n      }))();\n    },\n    removeUserFromBoard: function removeUserFromBoard(boardId, user) {\n      var _this8 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var confirmed;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log(\"User:\", user); // Sprawdźmy, co jest w obiekcie user\n              confirmed = window.confirm('Are you sure you want to remove this user from the board?');\n              if (!confirmed) {\n                _context8.next = 5;\n                break;\n              }\n              _context8.next = 5;\n              return _this8.deleteUserFromBoard(boardId, user);\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  },\n  computed: {\n    boardTotalLength: function boardTotalLength() {\n      return this.boards.length;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","editedBoardName","editedBoardId","editBoardModalVisible","editedBoardDescription","editedBoardDueDate","boards","boardUserCounts","userModalActive","currentUserList","currentBoardId","userId","newUserId","addUserModalActive","mounted","fetchBoards","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_iterator","_step","board","wrap","_callee$","_context","prev","next","get","sent","_createForOfIteratorHelper","s","n","done","value","fetchBoardUsers","id","t0","e","f","finish","t1","console","error","stop","deleteBoard","boardId","_this2","_callee2","confirmed","_callee2$","_context2","window","confirm","concat","updateBoard","_this3","_callee3","_callee3$","_context3","put","name","description","due_date","log","closeEditBoardModal","openBoard","$router","push","openEditBoardModal","_this4","_callee4","_callee4$","_context4","length","getBoardUserCount","openUserModal","fetchBoardUsersList","closeUserModal","_this5","_callee5","_callee5$","_context5","map","user","user_id","email","user_detail","openAddUserModal","closeAddUserModal","addUserToBoard","_this6","_callee6","_callee6$","_context6","post","deleteUserFromBoard","_this7","_callee7","_callee7$","_context7","removeUserFromBoard","_this8","_callee8","_callee8$","_context8","computed","boardTotalLength"],"sources":["C:\\Users\\kamil\\Desktop\\UczenieMaszynowe\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\Tables.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-board\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Boards</h1>\r\n      </div>\r\n\r\n      <div class=\"column is-12 box\">\r\n        <table class=\"table is-fullwidth\" v-if=\"boardTotalLength\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Create Date</th>\r\n              <th>Due Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in boards\" :key=\"board.id\">\r\n              <td>{{ board.name }}</td>\r\n              <td>{{ board.description }}</td>\r\n              <td>{{ board.create_date }}</td>\r\n              <td>{{ board.due_date }}</td>\r\n              <td>\r\n                <button @click=\"deleteBoard(board.id)\" class=\"button is-danger is-margin-right\">Delete</button>\r\n                <button @click=\"openEditBoardModal(board)\" class=\"button is-info is-margin-right\">Edit</button>\r\n                <button @click=\"openBoard(board.id)\" class=\"button is-primary is-margin-right\">Open</button>\r\n                <span @click=\"openUserModal(board.id)\" style=\"cursor: pointer;\">\r\n                  <i class=\"fas fa-users\"></i> {{ getBoardUserCount(board.id) }}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-else>You don't have any boards...</p>\r\n      </div>\r\n    </div>\r\n    <!-- Modal do edycji tablicy -->\r\n  <div v-if=\"editBoardModalVisible\" class=\"modal-user\">\r\n    <div class=\"modal-content-edit\">\r\n      <span class=\"close-edits\" @click=\"closeEditBoardModal\">&times;</span>\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Edit Board</h2>\r\n      <form @submit.prevent=\"updateBoard\">\r\n        <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n          <label for=\"editBoardName\" style=\"margin-right: 15px;\" >Board Name:</label>\r\n          <input type=\"text\" id=\"editBoardName\" v-model=\"editedBoardName\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n          <label for=\"editBoardDescription\" style=\"margin-right: 15px;\">Description:</label>\r\n          <textarea type=\"description\" id=\"editBoardDescription\" v-model=\"editedBoardDescription\" class=\"form-control textarea-description\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n          <label for=\"editBoardDueDate\" style=\"margin-right: 15px;\">Due Date:</label>\r\n          <input type=\"date\" id=\"editBoardDueDate\" v-model=\"editedBoardDueDate\" class=\"form-control\">\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"button is-primary\">Update Board</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n     <!-- Modal for User List -->\r\n<div class=\"modal\" :class=\"{ 'is-active': userModalActive }\">\r\n  <div class=\"modal-background\" @click=\"closeUserModal\"></div>\r\n  <div class=\"modal-card\">\r\n    <header class=\"modal-card-head\">\r\n      <p class=\"modal-card-title\">User List</p>\r\n      <button class=\"delete\" aria-label=\"close\" @click=\"closeUserModal\"></button>\r\n    </header>\r\n    <section class=\"modal-card-body\">\r\n      <ul>\r\n        <li v-for=\"user in currentUserList\" :key=\"user.id\" style=\"color: white;\">\r\n\r\n\r\n    ID: {{ user.user_detail.id }} | Email: {{ user.user_detail.email }}\r\n    <button @click=\"removeUserFromBoard(currentBoardId, user)\" class=\"button is-danger is-small\">Remove</button>\r\n  </li>\r\n</ul>\r\n\r\n    </section>\r\n    <footer class=\"modal-card-foot\">\r\n      <button class=\"button is-success\" @click=\"openAddUserModal\">Add User</button>\r\n      <button class=\"button\" @click=\"closeUserModal\">Cancel</button>\r\n    </footer>\r\n  </div>\r\n</div>\r\n  <!-- Modal for adding a new user -->\r\n  <div class=\"modal\" :class=\"{ 'is-active': addUserModalActive }\">\r\n    <div class=\"modal-background\" @click=\"closeAddUserModal\"></div>\r\n    <div class=\"modal-content\">\r\n      <div class=\"box\">\r\n        <h2 class=\"subtitle\">Add User to Board</h2>\r\n        <div class=\"field\">\r\n          <label class=\"label\">User ID</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" type=\"text\" v-model=\"newUserId\">\r\n          </div>\r\n        </div>\r\n        <div class=\"field\">\r\n          <button class=\"button is-success\" @click=\"addUserToBoard\">Add User</button>\r\n          <button class=\"button\" @click=\"closeAddUserModal\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      editedBoardName: '',\r\n      editedBoardId: null,\r\n      editBoardModalVisible: false,\r\n      editedBoardDescription: '',\r\n      editedBoardDueDate: '',\r\n      boards: [],\r\n      boardUserCounts: {},\r\n      userModalActive: false,\r\n      currentUserList: [],\r\n      currentBoardId: null,\r\n      userId: null,\r\n      newUserId: '',\r\n      addUserModalActive: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchBoards();\r\n  },\r\n  methods: {\r\n    async fetchBoards() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/board/list_board/');\r\n        this.boards = response.data;\r\n\r\n        // Po pobraniu listy tablic, dla każdej tablicy pobierz liczbę użytkowników\r\n        for (const board of this.boards) {\r\n          await this.fetchBoardUsers(board.id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching boards:', error);\r\n      }\r\n    },\r\n\r\n    async deleteBoard(boardId) {\r\n      try {\r\n        const confirmed = window.confirm('Are you sure you want to delete this board?');\r\n        if (confirmed) {\r\n          await axios.delete(`http://127.0.0.1:8000/board/${boardId}/delete_board/`);\r\n          this.fetchBoards();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting board:', error);\r\n      } \r\n    },\r\n\r\n    async updateBoard() {\r\n      try {\r\n        await axios.put(`http://127.0.0.1:8000/board/${this.editedBoardId}/edit_board/`, \r\n          { name: this.editedBoardName, description: this.editedBoardDescription, due_date: this.editedBoardDueDate }\r\n        );\r\n        console.log('Board updated successfully');\r\n        this.closeEditBoardModal();\r\n        this.fetchBoards();\r\n      } catch (error) {\r\n        console.error('Error updating board:', error);\r\n      }\r\n    },\r\n\r\n    openBoard(boardId) {\r\n      this.$router.push(`/section-table/${boardId}/create_section`);\r\n    },\r\n\r\n    openEditBoardModal(board) {\r\n      this.editBoardModalVisible = true;\r\n      this.editedBoardId = board.id;\r\n      this.editedBoardName = board.name;\r\n      this.editedBoardDescription = board.description;\r\n    },\r\n\r\n    closeEditBoardModal() {\r\n      this.editBoardModalVisible = false;\r\n    },\r\n    // zliczanie ilosci ziutków przypisanych do tablicy\r\n    async fetchBoardUsers(boardId) {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/board/${boardId}/users/`);\r\n        this.boardUserCounts[boardId] = response.data.length;\r\n      } catch (error) {\r\n        console.error('Error fetching board users:', error);\r\n      }\r\n    },\r\n\r\n    getBoardUserCount(boardId) {\r\n      return this.boardUserCounts[boardId] || 0;\r\n    },\r\n\r\n    openUserModal(boardId) {\r\n  this.userModalActive = true;\r\n  this.currentBoardId = boardId;\r\n  this.fetchBoardUsersList(boardId); // Dodaj to wywołanie, aby pobrać użytkowników tablicy\r\n},\r\n  closeUserModal() {\r\n      this.userModalActive = false;\r\n      this.currentBoardId = null;\r\n      this.currentUserList = [];\r\n    },\r\n  // wyswietlenie ziutków tablicy nie działa\r\n  async fetchBoardUsersList(boardId) {\r\n  try {\r\n    const response = await axios.get(`http://127.0.0.1:8000/board/${boardId}/users/`);\r\n    this.currentUserList = response.data.map(user => ({\r\n      id: user.user_id, // Ustawiamy user_id jako id\r\n      email: user.user_detail.email\r\n    }));\r\n    console.log('Current User List:', this.currentUserList); // Dodaj to logowanie\r\n    // Przypisz pierwszego użytkownika z listy jako aktualnie wybranego użytkownika\r\n    if (response.data.length > 0) {\r\n      this.userId = response.data[0].user_id;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching board users:', error);\r\n  }\r\n},\r\n\r\n\r\n\r\n    \r\n    openAddUserModal() {\r\n      this.addUserModalActive = true;\r\n    },\r\n\r\n    closeAddUserModal() {\r\n      this.addUserModalActive = false;\r\n      this.newUserId = ''; // Wyczyszczenie pola po zamknięciu modala\r\n    },\r\n\r\n    async addUserToBoard() {\r\n      try {\r\n        const boardId = this.currentBoardId;\r\n        const userId = this.newUserId;\r\n\r\n        // Wykonanie zapytania HTTP do dodania użytkownika do tablicy\r\n        await axios.post(`http://127.0.0.1:8000/board/${boardId}/add_user/`, { user: userId });\r\n\r\n        // Pobranie zaktualizowanej listy użytkowników po dodaniu nowego\r\n        await this.fetchBoardUsersList(boardId);\r\n\r\n        this.fetchBoards();\r\n        // Zamknięcie modala po dodaniu użytkownika\r\n        this.closeAddUserModal();\r\n      } catch (error) {\r\n        console.error('Error adding user to board:', error);\r\n      }\r\n    },\r\n    async deleteUserFromBoard(boardId, user) {\r\n  try {\r\n    console.log(\"User:\", user); // Dodajmy to logowanie\r\n    const userId = user.user_id; // Pobierz user_id z obiektu user\r\n    // Wykonanie zapytania HTTP do usunięcia użytkownika z tablicy\r\n    await axios.delete(`http://127.0.0.1:8000/board/${boardId}/delete_user/?user_id=${userId}`);\r\n\r\n    // Pobranie zaktualizowanej listy użytkowników po usunięciu\r\n    await this.fetchBoardUsersList(boardId);\r\n  } catch (error) {\r\n    console.error('Error deleting user from board:', error);\r\n  }\r\n},\r\n\r\nasync removeUserFromBoard(boardId, user) {\r\n  console.log(\"User:\", user); // Sprawdźmy, co jest w obiekcie user\r\n  const confirmed = window.confirm('Are you sure you want to remove this user from the board?');\r\n  if (confirmed) {\r\n    await this.deleteUserFromBoard(boardId, user);\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n  computed: {\r\n    boardTotalLength() {\r\n      return this.boards.length;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Edit */\r\n.modal-edit {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  overflow: auto;\r\n}\r\n\r\n.modal-content-edit {\r\n  margin: auto;\r\n  padding: 20px;\r\n  width: 50%; /* zmieniamy szerokość modalu edycji */\r\n  max-height: 80%; /* maksymalna wysokość modalu */\r\n  overflow-y: auto; /* dodajemy pionowy scroll w przypadku długich treści */\r\n  background-color: #d4d4d6; /* Zaktualizowany kolor tła */\r\n  border-radius: 5px;\r\n  border: 5px solid #007bff; /* Zaktualizowany kolor ramki */\r\n  text-align: center;\r\n  color: #000;\r\n  opacity: 0.9;\r\n}\r\n\r\n.close-edit {\r\n  color: #aaaaaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close-edit:hover,\r\n.close-edit:focus {\r\n  color: #000;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n/* User */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  overflow: auto;\r\n  \r\n}\r\n.modal-card-body {\r\n  color: white;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}