{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"board-list\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Lista Twoich Tablic\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"board-table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nazwa\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Opis\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Data Utworzenia\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Data Wygaśnięcia\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Brak tablic do wyświetlenia.\", -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _ctx.boards.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.boards, board => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: board.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(board.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.description), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatDate(board.create_date)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatDate(board.due_date)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_hoisted_6","_createElementBlock","_hoisted_1","_hoisted_2","_ctx","boards","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","board","id","_toDisplayString","name","description","formatDate","create_date","due_date","_hoisted_5","_hoisted_7"],"sources":["C:\\Users\\kamil\\Desktop\\Studia\\Semestr VI\\ProjektZespołowy\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\Tables.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <h1 class=\"title\">Lista Twoich Tablic</h1>\r\n    <div v-if=\"boards.length > 0\" class=\"board-table\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Nazwa</th>\r\n            <th>Opis</th>\r\n            <th>Data Utworzenia</th>\r\n            <th>Data Wygaśnięcia</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"board in boards\" :key=\"board.id\">\r\n            <td>{{ board.name }}</td>\r\n            <td>{{ board.description }}</td>\r\n            <td>{{ formatDate(board.create_date) }}</td>\r\n            <td>{{ formatDate(board.due_date) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div v-else>\r\n      <p>Brak tablic do wyświetlenia.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userData: null,\r\n      Boards: [] // Dodaj pole do przechowywania listy tablic użytkownika\r\n    };\r\n  },\r\n  mounted() {\r\n      this.fetchUserData();\r\n      this.fetchUserBoards(); // Wywołaj metodę pobierającą listę tablic użytkownika\r\n    },\r\n    methods: {\r\n      async fetchUserData() {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://127.0.0.1:8000/user/profile/', this.fetchUserData)\r\n\r\n\r\n        this.userData = response.data;\r\n      } catch (error) {\r\n        console.error('Błąd podczas pobierania danych użytkownika:', error);\r\n      }\r\n    },  \r\n    async fetchUserBoards() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://127.0.0.1:8000/board/list_board/', this.fetchUserBoards)\r\n\r\n        this.userBoards = response.data; // Ustaw listę tablic użytkownika w danych komponentu\r\n      } catch (error) {\r\n        console.error('Błąd podczas pobierania tablic użytkownika:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.user-profile {\r\n  position: fixed;\r\n  top: 6%;\r\n  right: 10px;\r\n  padding: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAO,GAAC,qBAAmB;;EAFzCE,GAAA;EAGkCF,KAAK,EAAC;;gCAEhCC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAAyB,YAArB,kBAAgB,E;;EAVhCC,GAAA;AAAA;gCAwBMD,mBAAA,CAAmC,WAAhC,8BAA4B;oBAA/BE,UAAmC,C;;uBAvBvCC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,UAA0C,EAC/BC,IAAA,CAAAC,MAAM,CAACC,MAAM,Q,cAAxBL,mBAAA,CAmBM,OAnBNM,UAmBM,GAlBJT,mBAAA,CAiBQ,gBAhBNU,UAOQ,EACRV,mBAAA,CAOQ,iB,kBANNG,mBAAA,CAKKQ,SAAA,QAnBfC,WAAA,CAc8BN,IAAA,CAAAC,MAAM,EAAfM,KAAK;yBAAhBV,mBAAA,CAKK;MALwBF,GAAG,EAAEY,KAAK,CAACC;QACtCd,mBAAA,CAAyB,YAAAe,gBAAA,CAAlBF,KAAK,CAACG,IAAI,kBACjBhB,mBAAA,CAAgC,YAAAe,gBAAA,CAAzBF,KAAK,CAACI,WAAW,kBACxBjB,mBAAA,CAA4C,YAAAe,gBAAA,CAArCT,IAAA,CAAAY,UAAU,CAACL,KAAK,CAACM,WAAW,mBACnCnB,mBAAA,CAAyC,YAAAe,gBAAA,CAAlCT,IAAA,CAAAY,UAAU,CAACL,KAAK,CAACO,QAAQ,kB;yDAKxCjB,mBAAA,CAEM,OAzBVkB,UAAA,MAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}