{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nimport draggable from \"vuedraggable\";\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    return {\n      boardId: null,\n      boardName: '',\n      sections: [],\n      sectionId: null,\n      taskId: null,\n      sectionName: '',\n      taskName: '',\n      description: '',\n      dueDate: '',\n      dragging: false,\n      // Modal dla dodania sekcji\n      showModal: false,\n      selectedTask: null,\n      // Modale dla sekcji\n      editModalVisible: false,\n      editedSectionId: null,\n      editedSectionName: '',\n      editSectionModalVisible: false,\n      confirmedDeleteSectionId: null,\n      deleteConfirmationModalVisibleSection: false,\n      // Modale dla taskow\n      taskModalVisible: false,\n      editTaskModalVisible: false,\n      // Board Info\n      boardUsers: [],\n      boardDescription: '',\n      boardCreateDate: '',\n      boardDueDate: ''\n    };\n  },\n  mounted: function mounted() {\n    this.boardId = this.$route.params.board_id;\n    this.sectionId = this.$route.params.section_id;\n    this.fetchBoardName();\n    this.fetchSections();\n    this.fetchBoardData();\n    console.log(\"Params:\", this.$route.params);\n  },\n  methods: {\n    editSection: function editSection(sectionId) {\n      this.$router.push(\"/section/\".concat(this.$route.params.board_id, \"/edit-section/\").concat(sectionId));\n    },\n    // ------------ Displaying board info ----------------\n    fetchBoardData: function fetchBoardData() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var boardResponse, usersResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this.boardId, \"/\"));\n            case 3:\n              boardResponse = _context.sent;\n              // Ustawienie opisu tablicy\n              _this.boardDescription = boardResponse.data.description;\n              _this.boardCreateDate = boardResponse.data.create_date;\n              _this.boardDueDate = boardResponse.data.due_date;\n              // Pobranie listy użytkowników przypisanych do tablicy\n              _context.next = 9;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this.boardId, \"/users/\"));\n            case 9:\n              usersResponse = _context.sent;\n              _this.boardUsers = usersResponse.data;\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching board data:', _context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 13]]);\n      }))();\n    },\n    // ----------- Fetche -----------\n    fetchBoardName: function fetchBoardName() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this2.boardId, \"/\"));\n            case 3:\n              response = _context2.sent;\n              _this2.boardName = response.data.name;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error fetching board name:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    fetchSections: function fetchSections() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response, _iterator, _step, section;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/section/\".concat(_this3.boardId, \"/sections/\"));\n            case 3:\n              response = _context3.sent;\n              _this3.sections = response.data;\n              _iterator = _createForOfIteratorHelper(_this3.sections);\n              _context3.prev = 6;\n              _iterator.s();\n            case 8:\n              if ((_step = _iterator.n()).done) {\n                _context3.next = 16;\n                break;\n              }\n              section = _step.value;\n              if (section.tasks) {\n                _context3.next = 14;\n                break;\n              }\n              section.tasks = []; // Inicjalizacja pustej tablicy tasków, jeśli nie istnieje\n              _context3.next = 14;\n              return _this3.fetchTasksForSection(section);\n            case 14:\n              _context3.next = 8;\n              break;\n            case 16:\n              _context3.next = 21;\n              break;\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](6);\n              _iterator.e(_context3.t0);\n            case 21:\n              _context3.prev = 21;\n              _iterator.f();\n              return _context3.finish(21);\n            case 24:\n              _context3.next = 29;\n              break;\n            case 26:\n              _context3.prev = 26;\n              _context3.t1 = _context3[\"catch\"](0);\n              console.error('Error fetching sections:', _context3.t1);\n            case 29:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 26], [6, 18, 21, 24]]);\n      }))();\n    },\n    fetchTasksForSection: function fetchTasksForSection(section) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/task/\".concat(section.id, \"/task_list/\"));\n            case 3:\n              response = _context4.sent;\n              section.tasks = response.data;\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(\"Error fetching tasks for section:\", _context4.t0);\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 7]]);\n      }))();\n    },\n    // ----------- Section -----------\n    createSection: function createSection() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              token = localStorage.getItem('token');\n              _context5.next = 4;\n              return axios.post(\"http://127.0.0.1:8000/section/\".concat(_this4.boardId, \"/create_section/\"), {\n                name: _this4.sectionName,\n                board: _this4.boardId\n              }, {\n                headers: {\n                  Authorization: \"Token \".concat(token)\n                }\n              });\n            case 4:\n              response = _context5.sent;\n              console.log('Section created:', response.data);\n              _this4.showModal = false;\n              _this4.fetchSections();\n              _context5.next = 13;\n              break;\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error creating section:', _context5.t0);\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 10]]);\n      }))();\n    },\n    updateSection: function updateSection() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              token = localStorage.getItem('token');\n              _context6.next = 4;\n              return axios.put(\"http://127.0.0.1:8000/section/\".concat(_this5.boardId, \"/update_section/\").concat(_this5.section.id, \"/\"), {\n                name: _this5.sectionName\n              }, {\n                headers: {\n                  Authorization: \"Token \".concat(token)\n                }\n              });\n            case 4:\n              response = _context6.sent;\n              console.log('Section updated:', response.data);\n              _this5.editModalVisible = false;\n              _this5.fetchSections(); // Ponowne pobranie sekcji po aktualizacji\n              _context6.next = 13;\n              break;\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error updating section:', _context6.t0);\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 10]]);\n      }))();\n    },\n    deleteSection: function deleteSection(sectionId) {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              token = localStorage.getItem('token');\n              _context7.next = 4;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/section/delete_section/\".concat(sectionId), {\n                headers: {\n                  Authorization: \"Token \".concat(token)\n                }\n              });\n            case 4:\n              _this6.fetchSections(); // Odśwież listę sekcji po usunięciu\n              _this6.deleteConfirmationModalVisibleSection = false;\n              _context7.next = 11;\n              break;\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('Error deleting section:', _context7.t0);\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 8]]);\n      }))();\n    },\n    // ----------- MODAL DLA SEKCJI -----------\n    openEditModalSection: function openEditModalSection(section) {\n      this.editSectionModalVisible = true;\n      this.editedSectionId = section.id;\n      this.editedSectionName = section.name;\n    },\n    closeEditModalSection: function closeEditModalSection() {\n      this.editSectionModalVisible = false;\n    },\n    confirmDeleteSection: function confirmDeleteSection(section) {\n      this.confirmedDeleteSectionId = section.id;\n      this.deleteConfirmationModalVisibleSection = true;\n    },\n    closeDeleteConfirmationModalSection: function closeDeleteConfirmationModalSection() {\n      this.deleteConfirmationModalVisibleSection = false;\n    },\n    // ----------- TASKI -----------\n    createTask: function createTask() {\n      var _this7 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var token, currentDate, response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              token = localStorage.getItem('token');\n              currentDate = new Date();\n              _context8.next = 5;\n              return axios.post('http://127.0.0.1:8000/task/create/', {\n                name: _this7.taskName,\n                description: _this7.description,\n                section: _this7.selectedSectionId,\n                create_date: currentDate,\n                due_date: _this7.dueDate\n              }, {\n                headers: {\n                  Authorization: \"Token \".concat(token)\n                }\n              });\n            case 5:\n              response = _context8.sent;\n              console.log('Task created:', response.data);\n              _this7.taskModalVisible = false;\n              _this7.fetchSections(); // Po utworzeniu zadania odśwież listę sekcji, aby wyświetlić nowe zadanie\n              _context8.next = 14;\n              break;\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('Error creating task:', _context8.t0.response);\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 11]]);\n      }))();\n    },\n    editTask: function editTask(selectedTask) {\n      var _this8 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              token = localStorage.getItem('token'); //const currentDate = new Date();\n              _context9.next = 4;\n              return axios.put(\"http://127.0.0.1:8000/task/update_task/\".concat(_this8.selectedTask.id), {\n                name: _this8.taskName,\n                description: _this8.description,\n                section: _this8.selectedSectionId,\n                due_date: _this8.dueDate\n              }, {\n                headers: {\n                  Authorization: \"Token \".concat(token)\n                }\n              });\n            case 4:\n              response = _context9.sent;\n              console.log('Task updated:', response.data);\n              window.location.reload();\n              _this8.fetchTasksForSection();\n              // Tutaj możesz dodać odpowiednią obsługę po udanej aktualizacji zadania, np. odświeżenie listy zadań\n              _context9.next = 13;\n              break;\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.error('Error updating task:', _context9.t0);\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[0, 10]]);\n      }))();\n    },\n    deleteTask: function deleteTask(taskId) {\n      var _this9 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/task/delete_task/\".concat(taskId));\n            case 3:\n              _this9.fetchTasksForSection(); // Aktualizuj listę zadań po usunięciu\n              window.location.reload();\n              _context10.next = 10;\n              break;\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              console.error('Error deleting task:', _context10.t0);\n            case 10:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, null, [[0, 7]]);\n      }))();\n    },\n    // ----------- MODALE TASKI -----------\n    // Add Task\n    // wyswietlenie\n    openAddTaskModal: function openAddTaskModal(section) {\n      this.taskModalVisible = true;\n      this.sectionName = section.sectionName;\n      this.selectedSectionId = section.id;\n    },\n    // zamkniecie\n    closeAddTaskModal: function closeAddTaskModal() {\n      this.taskModalVisible = false;\n    },\n    // Delete Task\n    showTaskDetails: function showTaskDetails(task) {\n      this.selectedTask = task;\n    },\n    // Edit Task\n    openEditModalTask: function openEditModalTask(task) {\n      this.editTaskModalVisible = true;\n      this.taskName = task.name;\n      this.description = task.description;\n      this.sectionName = task.sectionName; // Check if this property is correct\n      this.dueDate = task.dueDate; // Check if this property is correct\n    },\n    closeTaskEditModal: function closeTaskEditModal() {\n      this.editTaskModalVisible = false;\n    },\n    // Details Task\n    closeTaskDetailsModal: function closeTaskDetailsModal() {\n      this.selectedTask = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","draggable","components","data","boardId","boardName","sections","sectionId","taskId","sectionName","taskName","description","dueDate","dragging","showModal","selectedTask","editModalVisible","editedSectionId","editedSectionName","editSectionModalVisible","confirmedDeleteSectionId","deleteConfirmationModalVisibleSection","taskModalVisible","editTaskModalVisible","boardUsers","boardDescription","boardCreateDate","boardDueDate","mounted","$route","params","board_id","section_id","fetchBoardName","fetchSections","fetchBoardData","console","log","methods","editSection","$router","push","concat","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","boardResponse","usersResponse","wrap","_callee$","_context","prev","next","get","sent","create_date","due_date","t0","error","stop","_this2","_callee2","response","_callee2$","_context2","name","_this3","_callee3","_iterator","_step","section","_callee3$","_context3","_createForOfIteratorHelper","s","n","done","value","tasks","fetchTasksForSection","e","f","finish","t1","_callee4","_callee4$","_context4","id","createSection","_this4","_callee5","token","_callee5$","_context5","localStorage","getItem","post","board","headers","Authorization","updateSection","_this5","_callee6","_callee6$","_context6","put","deleteSection","_this6","_callee7","_callee7$","_context7","openEditModalSection","closeEditModalSection","confirmDeleteSection","closeDeleteConfirmationModalSection","createTask","_this7","_callee8","currentDate","_callee8$","_context8","Date","selectedSectionId","editTask","_this8","_callee9","_callee9$","_context9","window","location","reload","deleteTask","_this9","_callee10","_callee10$","_context10","openAddTaskModal","closeAddTaskModal","showTaskDetails","task","openEditModalTask","closeTaskEditModal","closeTaskDetailsModal"],"sources":["C:\\Users\\szymo\\Desktop\\gole baby i milfy\\studia\\scrum\\test17kwietnia\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\SectionTable.vue"],"sourcesContent":["<template #item=\"{element: tasks}\">\r\n<div class=\"page-section-table\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Section Table</h1>\r\n      </div>\r\n      <div class=\"column is-12 box\">\r\n        <h2 class=\"subtitle\">Board Details</h2>\r\n        <p><strong>Board Description:</strong> {{ boardDescription }}</p>\r\n        <p><strong>Create Date:</strong> {{ boardCreateDate }}</p>\r\n        <p><strong>Due Date:</strong> {{ boardDueDate }}</p>\r\n        <h2 class=\"subtitle\" style=\"margin-top: 20px;\">Users Assigned to Board</h2>\r\n        <ul>\r\n          <li v-for=\"user in boardUsers\" :key=\"user.id\">\r\n            {{ user.user_detail.email }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"section-table-container\">\r\n   <!-- Nagłówek tabeli z nazwą tablicy -->\r\n   <h1 class=\"board-title\">Section for Board: {{ boardName }}</h1>\r\n   <!-- Kontener sekcji i przycisku do dodawania nowej sekcji -->\r\n   <h2 class=\"section-edit-info\">Click on section name to edit</h2>\r\n   <div class=\"section-container\">\r\n  <div class=\"section-card\" v-for=\"section in sections\" :key=\"section.id\">\r\n    <div class=\"section-name\" id=\"section-title\" @click=\"editSection(section.id)\" >\r\n      <b>{{ section.name }}</b> \r\n    </div>\r\n\r\n    <!-- Ramka z listą zadań -->\r\n    <button @click=\"confirmDeleteSection(section)\" class=\"button is-danger delete-section-btn\"><i class=\"fas fa-times\"></i></button>\r\n    <draggable v-if=\"section.tasks && section.tasks.length> 0\" v-model=\"section.tasks\" group=\"+\" :itemKey=\"task => task.id\">\r\n      <template #item=\"{element}\">\r\n        <div class=\"task-list-frame\">\r\n          <div class=\"task\" @click=\"showTaskDetails(element)\">\r\n            <div class=\"task-name-frame\">\r\n              <div class=\"task-name\">{{ element.name }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </draggable>\r\n\r\n    <!-- Przycisk do dodawania nowego zadania -->\r\n    <button @click=\"openAddTaskModal(section)\" class=\"add-task-button\">Add Task</button>\r\n  </div>\r\n\r\n     <!-- Przycisk do dodawania nowej sekcji -->\r\n     <div class=\"add-section-btn-container\">\r\n       <button class=\"add-section-btn\" @click=\"showModal = true\"><i class=\"fas fa-plus\" style=\"font-size: 50px;\"></i></button>\r\n     </div>\r\n   </div>\r\n   \r\n    <!-- ------------------------------ MODALE  SEKCJA--------------------------------------------------------------------------------------- -->\r\n    <!-- Modal do potwierdzenia usunięcia sekcji -->\r\n  <div v-if=\"deleteConfirmationModalVisibleSection\" class=\"modal\" >\r\n    <div class=\"modal-content\" id=\"delete-section\" style=\"max-width: 400px;\">\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Usuń sekcję</h2>\r\n      <p>Na pewno chcesz usunąć sekcję?</p>\r\n      <div style=\"margin-top: 20px;\">\r\n        <button @click=\"deleteSection(confirmedDeleteSectionId)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Tak</button>\r\n        <button @click=\"closeDeleteConfirmationModalSection\" class=\"button is-info\">Nie</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n   <!-- ----------- Modal do tworzenia nowej sekcji ----------- -->\r\n   <div v-if=\"showModal\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"showModal = false\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Enter Section Name</h2>\r\n       <form @submit.prevent=\"createSection\">\r\n         <div class=\"form-group\">\r\n           <label for=\"sectionName\" class=\"section-name\">Section Name: </label>\r\n           <input type=\"text\" id=\"sectionName\" v-model=\"sectionName\" class=\"form-control\">\r\n         </div>\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">Create Section</button>\r\n       </form>\r\n     </div>\r\n   </div>\r\n\r\n   <!-- ----------- Modal do edycji sekcji ----------- -->\r\n   <div v-if=\"editSectionModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeEditModalSection\"><i class=\"fas fa-times\"></i></span>\r\n        <h2 class=\"section-name\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Edit Section</h2>\r\n        <form @submit.prevent=\"updateSection\">\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"editSectionName\" class=\"section-name\" style=\"margin-bottom: 15px; margin-right:15px; font-weight: bold; font-size: 15px;\">Section Name:</label>\r\n            <input type=\"text\" id=\"editSectionName\" v-model=\"editedSectionName\" class=\"form-control\">\r\n          </div>\r\n          <button type=\"submit\" class=\"button is-primary\" style=\"margin-top: 15px;\">Update Section</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ------------------------------ MODALE  TASKI --------------------------------------------------------------------------------------- -->\r\n   <!-- ----------- Modal do dodawania nowego zadania ----------- -->\r\n   <div v-if=\"taskModalVisible\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"closeAddTaskModal\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Add New Task</h2>\r\n       <form @submit.prevent=\"createTask\">\r\n         <div class=\"form-group\">\r\n           <label for=\"taskName\" class=\"section-name\">Task Name:</label>\r\n           <input type=\"text\" id=\"taskName\" v-model=\"taskName\" class=\"form-control\">\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"description\" class=\"section-name\">Description:</label>\r\n           <textarea id=\"description\" v-model=\"description\" class=\"form-control\"></textarea>\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"dueDate\" class=\"section-name\">Due Date:</label>\r\n           <input type=\"date\" id=\"dueDate\" v-model=\"dueDate\" class=\"form-control\">\r\n         </div>\r\n\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">Create Task</button>\r\n       </form>\r\n     </div>\r\n   </div>\r\n   \r\n   <!-- ----------- Modal z szczegółami zadania ----------- -->\r\n   <div v-if=\"selectedTask\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"selectedTask = null\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Task Details</h2>\r\n       <div class=\"task-details\">\r\n         <!-- Nazwa zadania -->\r\n         <div class=\"task-name\" style=\"color: black; font-size: 25px;\">{{ selectedTask.name }}</div>\r\n         <div class=\"task-description\" style=\"font-weight: bold;\">Descriptoion: {{ selectedTask.description }}</div>\r\n         <div class=\"task-due-date\" style=\"margin-bottom: 10px;\"> Due date: {{ selectedTask.due_date }}</div>\r\n         <button @click=\"openEditModalTask(selectedTask.id)\" class=\"edit-section-button\">Edit</button>\r\n         <button @click=\"deleteTask(selectedTask.id)\" class=\"delete-task-button\">Delete Task</button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n      <!-- ----------- Modal do edycji taska ----------- -->\r\n      <div v-if=\"editTaskModalVisible\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"closeTaskEditModal\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Edit Task</h2>\r\n       <form @submit.prevent=\"editTask\">\r\n        <div class=\"form-group\">\r\n           <label for=\"taskName\" class=\"section-name\" style=\"font-size: 20px; margin-right: 15px; margin-top: 10px;\">Task Name:</label>\r\n           <input type=\"text\" id=\"taskName\" v-model=\"taskName\" class=\"form-control\">\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"description\" class=\"section-name\" style=\"font-size: 20px;  margin-right: 15px; margin-top: 10px;\">Description:</label>\r\n           <textarea id=\"description\" v-model=\"description\" class=\"form-control\"></textarea>\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"dueDate\" class=\"section-name\" style=\"font-size: 20px;  margin-right: 15px; margin-top: 10px;\">Due Date:</label>\r\n           <input type=\"date\" id=\"dueDate\" v-model=\"dueDate\" class=\"form-control\">\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"sectionName\" class=\"section-name\" style=\"font-size: 20px;  margin-right: 15px; margin-top: 15px;\">Section:</label>\r\n           <input id=\"sectionName\" v-model=\"sectionName\" class=\"form-control section-name\" disabled>\r\n         </div>\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">Edit Task</button>\r\n       </form>\r\n     </div>\r\n   </div> \r\n\r\n   <!-- Modal do potwierdzenia usunięcia taska -->\r\n  <div v-if=\"deleteConfirmationModalVisibleTask\" class=\"modal\" >\r\n    <div class=\"modal-content\" id=\"delete-task\" style=\"max-width: 400px;\">\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Usuń zadanie</h2>\r\n      <p>Na pewno chcesz usunąć zadanie?</p>\r\n      <div style=\"margin-top: 20px;\">\r\n        <button @click=\"deleteTask(confirmedDeleteSectionId)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Tak</button>\r\n        <button @click=\"closeDeleteConfirmationModalTask\" class=\"button is-info\">Nie</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport draggable from \"vuedraggable\"\r\n\r\nexport default {\r\n components: {\r\n   draggable\r\n },\r\n data() {\r\n   return {\r\n     boardId: null,\r\n     boardName: '',\r\n     sections: [],\r\n     sectionId: null,\r\n     taskId: null,\r\n     sectionName: '',\r\n     taskName: '',\r\n     description: '',\r\n     dueDate: '',\r\n     dragging: false,\r\n     // Modal dla dodania sekcji\r\n     showModal: false,\r\n     selectedTask: null,\r\n     // Modale dla sekcji\r\n     editModalVisible: false,\r\n     editedSectionId: null,\r\n     editedSectionName: '',\r\n     editSectionModalVisible: false,\r\n     confirmedDeleteSectionId: null,\r\n     deleteConfirmationModalVisibleSection: false,\r\n     // Modale dla taskow\r\n     taskModalVisible: false,\r\n     editTaskModalVisible: false,\r\n     // Board Info\r\n     boardUsers: [],\r\n     boardDescription: '',\r\n     boardCreateDate: '',\r\n     boardDueDate: '',\r\n   };\r\n },\r\n mounted() {\r\n   this.boardId = this.$route.params.board_id;\r\n   this.sectionId = this.$route.params.section_id;\r\n   this.fetchBoardName();\r\n   this.fetchSections();\r\n   this.fetchBoardData(); \r\n   console.log(\"Params:\", this.$route.params);\r\n },\r\n methods: {\r\n  editSection(sectionId) {\r\n    this.$router.push(`/section/${this.$route.params.board_id}/edit-section/${sectionId}`);\r\n  },\r\n\r\n    // ------------ Displaying board info ----------------\r\n    async fetchBoardData() {\r\n      try {\r\n        // Pobranie danych tablicy z backendu\r\n        const boardResponse = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/`);\r\n        // Ustawienie opisu tablicy\r\n        this.boardDescription = boardResponse.data.description;\r\n        this.boardCreateDate = boardResponse.data.create_date;\r\n        this.boardDueDate = boardResponse.data.due_date;\r\n        // Pobranie listy użytkowników przypisanych do tablicy\r\n        const usersResponse = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/users/`);\r\n        this.boardUsers = usersResponse.data;\r\n      } catch (error) {\r\n        console.error('Error fetching board data:', error);\r\n      }\r\n    },\r\n\r\n  // ----------- Fetche -----------\r\n   async fetchBoardName() {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/`);\r\n       this.boardName = response.data.name;\r\n     } catch (error) {\r\n       console.error('Error fetching board name:', error);\r\n     }\r\n   },\r\n\r\n   async fetchSections() {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/section/${this.boardId}/sections/`);\r\n       this.sections = response.data;\r\n       for (const section of this.sections) {\r\n         if (!section.tasks) {\r\n           section.tasks = []; // Inicjalizacja pustej tablicy tasków, jeśli nie istnieje\r\n           await this.fetchTasksForSection(section);\r\n         }\r\n       }\r\n     } catch (error) {\r\n       console.error('Error fetching sections:', error);\r\n     }\r\n   },\r\n\r\n   async fetchTasksForSection(section) {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/task/${section.id}/task_list/`);\r\n       section.tasks = response.data;\r\n     } catch (error) {\r\n       console.error(`Error fetching tasks for section:`, error);\r\n     }\r\n   },\r\n   // ----------- Section -----------\r\n   async createSection() {\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n       const response = await axios.post(\r\n         `http://127.0.0.1:8000/section/${this.boardId}/create_section/`,\r\n         { name: this.sectionName, board: this.boardId },\r\n         { headers: { Authorization: `Token ${token}` } }\r\n       );\r\n       console.log('Section created:', response.data);\r\n       this.showModal = false;\r\n       this.fetchSections();\r\n     } catch (error) {\r\n       console.error('Error creating section:', error);\r\n     }\r\n   },\r\n   async updateSection() {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.put(\r\n            `http://127.0.0.1:8000/section/${this.boardId}/update_section/${this.section.id}/`,\r\n            { name: this.sectionName},\r\n         { headers: { Authorization: `Token ${token}` } }\r\n        );\r\n        console.log('Section updated:', response.data);\r\n        this.editModalVisible = false;\r\n        this.fetchSections(); // Ponowne pobranie sekcji po aktualizacji\r\n    } catch (error) {\r\n        console.error('Error updating section:', error);\r\n    }\r\n  },\r\n  async deleteSection(sectionId) {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`http://127.0.0.1:8000/section/delete_section/${sectionId}`, {\r\n        headers: {\r\n          Authorization: `Token ${token}`\r\n        }\r\n      });\r\n      this.fetchSections(); // Odśwież listę sekcji po usunięciu\r\n      this.deleteConfirmationModalVisibleSection = false;\r\n    } catch (error) {\r\n      console.error('Error deleting section:', error);\r\n    }\r\n  },\r\n\r\n  // ----------- MODAL DLA SEKCJI -----------\r\n  openEditModalSection(section) {\r\n    this.editSectionModalVisible = true;\r\n    this.editedSectionId = section.id;\r\n    this.editedSectionName = section.name;\r\n  },\r\n\r\n  closeEditModalSection() {\r\n    this.editSectionModalVisible = false;\r\n  },\r\n\r\n  confirmDeleteSection(section) {\r\n      this.confirmedDeleteSectionId = section.id;\r\n      this.deleteConfirmationModalVisibleSection = true;\r\n  },\r\n\r\n    closeDeleteConfirmationModalSection() {\r\n      this.deleteConfirmationModalVisibleSection = false;\r\n    },\r\n\r\n  // ----------- TASKI -----------\r\n  async createTask() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const currentDate = new Date();\r\n        const response = await axios.post(\r\n          'http://127.0.0.1:8000/task/create/',\r\n          { name: this.taskName, description: this.description, section: this.selectedSectionId, create_date: currentDate, due_date: this.dueDate,  },\r\n          { headers: { Authorization: `Token ${token}` } }\r\n        );\r\n        console.log('Task created:', response.data);\r\n        this.taskModalVisible = false;\r\n        this.fetchSections(); // Po utworzeniu zadania odśwież listę sekcji, aby wyświetlić nowe zadanie\r\n      } catch (error) {\r\n        console.error('Error creating task:', error.response);\r\n      }\r\n    },\r\n   async editTask(selectedTask) {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      //const currentDate = new Date();\r\n      const response = await axios.put(\r\n        `http://127.0.0.1:8000/task/update_task/${this.selectedTask.id}`,  \r\n        { \r\n          name: this.taskName, \r\n          description: this.description, \r\n          section: this.selectedSectionId,\r\n          due_date: this.dueDate,\r\n        },\r\n        { headers: { Authorization: `Token ${token}` } }\r\n      );\r\n\r\n      console.log('Task updated:', response.data);\r\n      window.location.reload();\r\n      this.fetchTasksForSection();\r\n      // Tutaj możesz dodać odpowiednią obsługę po udanej aktualizacji zadania, np. odświeżenie listy zadań\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  },\r\n  async deleteTask(taskId) {\r\n    try {\r\n      await axios.delete(`http://127.0.0.1:8000/task/delete_task/${taskId}`,);\r\n      this.fetchTasksForSection(); // Aktualizuj listę zadań po usunięciu\r\n      window.location.reload();\r\n    } catch (error){\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  },\r\n    // ----------- MODALE TASKI -----------\r\n  // Add Task\r\n  // wyswietlenie\r\n  openAddTaskModal(section) {\r\n    this.taskModalVisible = true;\r\n    this.sectionName = section.sectionName;\r\n    this.selectedSectionId = section.id;\r\n  },\r\n  // zamkniecie\r\n  closeAddTaskModal() {\r\n    this.taskModalVisible = false;\r\n  },\r\n  // Delete Task\r\n  showTaskDetails(task) {\r\n    this.selectedTask = task;\r\n  },\r\n  // Edit Task\r\n  openEditModalTask(task) {\r\n  this.editTaskModalVisible = true;\r\n  this.taskName = task.name;\r\n  this.description = task.description; \r\n  this.sectionName = task.sectionName;  // Check if this property is correct\r\n  this.dueDate = task.dueDate; // Check if this property is correct\r\n},\r\n\r\n  closeTaskEditModal() {\r\n    this.editTaskModalVisible = false; \r\n  },\r\n  // Details Task\r\n  closeTaskDetailsModal() {\r\n    this.selectedTask = false;\r\n  },\r\n  } \r\n};\r\n</script>\r\n\r\n\r\n<style scoped src=\"../../style/SectionTable.css\"></style>"],"mappings":";;;;;;;;;AAuLA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,cAAa;AAEnC,eAAe;EACdC,UAAU,EAAE;IACVD,SAAQ,EAARA;EACF,CAAC;EACDE,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,KAAK;MACf;MACAC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,IAAI;MAClB;MACAC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE,EAAE;MACrBC,uBAAuB,EAAE,KAAK;MAC9BC,wBAAwB,EAAE,IAAI;MAC9BC,qCAAqC,EAAE,KAAK;MAC5C;MACAC,gBAAgB,EAAE,KAAK;MACvBC,oBAAoB,EAAE,KAAK;MAC3B;MACAC,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IACR,IAAI,CAACxB,OAAM,GAAI,IAAI,CAACyB,MAAM,CAACC,MAAM,CAACC,QAAQ;IAC1C,IAAI,CAACxB,SAAQ,GAAI,IAAI,CAACsB,MAAM,CAACC,MAAM,CAACE,UAAU;IAC9C,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,CAACC,MAAM,CAAC;EAC5C,CAAC;EACDQ,OAAO,EAAE;IACRC,WAAW,WAAAA,YAAChC,SAAS,EAAE;MACrB,IAAI,CAACiC,OAAO,CAACC,IAAI,aAAAC,MAAA,CAAa,IAAI,CAACb,MAAM,CAACC,MAAM,CAACC,QAAQ,oBAAAW,MAAA,CAAiBnC,SAAS,CAAE,CAAC;IACxF,CAAC;IAEC;IACM4B,cAAc,WAAAA,eAAA,EAAG;MAAA,IAAAQ,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,aAAA,EAAAC,aAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGStD,KAAK,CAACuD,GAAG,gCAAAb,MAAA,CAAgCC,KAAI,CAACvC,OAAO,MAAG,CAAC;YAAA;cAA/E4C,aAAY,GAAAI,QAAA,CAAAI,IAAA;cAClB;cACAb,KAAI,CAAClB,gBAAe,GAAIuB,aAAa,CAAC7C,IAAI,CAACQ,WAAW;cACtDgC,KAAI,CAACjB,eAAc,GAAIsB,aAAa,CAAC7C,IAAI,CAACsD,WAAW;cACrDd,KAAI,CAAChB,YAAW,GAAIqB,aAAa,CAAC7C,IAAI,CAACuD,QAAQ;cAC/C;cAAAN,QAAA,CAAAE,IAAA;cAAA,OAC4BtD,KAAK,CAACuD,GAAG,gCAAAb,MAAA,CAAgCC,KAAI,CAACvC,OAAO,YAAS,CAAC;YAAA;cAArF6C,aAAY,GAAAG,QAAA,CAAAI,IAAA;cAClBb,KAAI,CAACnB,UAAS,GAAIyB,aAAa,CAAC9C,IAAI;cAAAiD,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEpChB,OAAO,CAACwB,KAAK,CAAC,4BAA4B,EAAAR,QAAA,CAAAO,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAP,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEtD,CAAC;IAEH;IACOd,cAAc,WAAAA,eAAA,EAAG;MAAA,IAAA6B,MAAA;MAAA,OAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAC,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAe,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;YAAA;cAAAY,SAAA,CAAAb,IAAA;cAAAa,SAAA,CAAAZ,IAAA;cAAA,OAEItD,KAAK,CAACuD,GAAG,gCAAAb,MAAA,CAAgCoB,MAAI,CAAC1D,OAAO,MAAG,CAAC;YAAA;cAA1E4D,QAAO,GAAAE,SAAA,CAAAV,IAAA;cACbM,MAAI,CAACzD,SAAQ,GAAI2D,QAAQ,CAAC7D,IAAI,CAACgE,IAAI;cAAAD,SAAA,CAAAZ,IAAA;cAAA;YAAA;cAAAY,SAAA,CAAAb,IAAA;cAAAa,SAAA,CAAAP,EAAA,GAAAO,SAAA;cAEnC9B,OAAO,CAACwB,KAAK,CAAC,4BAA4B,EAAAM,SAAA,CAAAP,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAO,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IAEtD,CAAC;IAEK7B,aAAa,WAAAA,cAAA,EAAG;MAAA,IAAAkC,MAAA;MAAA,OAAAxB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAuB,SAAA;QAAA,IAAAL,QAAA,EAAAM,SAAA,EAAAC,KAAA,EAAAC,OAAA;QAAA,OAAA3B,mBAAA,GAAAK,IAAA,UAAAuB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAApB,IAAA;cAAA,OAEKtD,KAAK,CAACuD,GAAG,kCAAAb,MAAA,CAAkC0B,MAAI,CAAChE,OAAO,eAAY,CAAC;YAAA;cAArF4D,QAAO,GAAAU,SAAA,CAAAlB,IAAA;cACbY,MAAI,CAAC9D,QAAO,GAAI0D,QAAQ,CAAC7D,IAAI;cAAAmE,SAAA,GAAAK,0BAAA,CACPP,MAAI,CAAC9D,QAAQ;cAAAoE,SAAA,CAAArB,IAAA;cAAAiB,SAAA,CAAAM,CAAA;YAAA;cAAA,KAAAL,KAAA,GAAAD,SAAA,CAAAO,CAAA,IAAAC,IAAA;gBAAAJ,SAAA,CAAApB,IAAA;gBAAA;cAAA;cAAxBkB,OAAM,GAAAD,KAAA,CAAAQ,KAAA;cAAA,IACVP,OAAO,CAACQ,KAAK;gBAAAN,SAAA,CAAApB,IAAA;gBAAA;cAAA;cAChBkB,OAAO,CAACQ,KAAI,GAAI,EAAE,EAAE;cAAAN,SAAA,CAAApB,IAAA;cAAA,OACdc,MAAI,CAACa,oBAAoB,CAACT,OAAO,CAAC;YAAA;cAAAE,SAAA,CAAApB,IAAA;cAAA;YAAA;cAAAoB,SAAA,CAAApB,IAAA;cAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAAf,EAAA,GAAAe,SAAA;cAAAJ,SAAA,CAAAY,CAAA,CAAAR,SAAA,CAAAf,EAAA;YAAA;cAAAe,SAAA,CAAArB,IAAA;cAAAiB,SAAA,CAAAa,CAAA;cAAA,OAAAT,SAAA,CAAAU,MAAA;YAAA;cAAAV,SAAA,CAAApB,IAAA;cAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAAW,EAAA,GAAAX,SAAA;cAI5CtC,OAAO,CAACwB,KAAK,CAAC,0BAA0B,EAAAc,SAAA,CAAAW,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAX,SAAA,CAAAb,IAAA;UAAA;QAAA,GAAAQ,QAAA;MAAA;IAEpD,CAAC;IAEKY,oBAAoB,WAAAA,qBAACT,OAAO,EAAE;MAAA,OAAA5B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAwC,SAAA;QAAA,IAAAtB,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAqC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;YAAA;cAAAkC,SAAA,CAAAnC,IAAA;cAAAmC,SAAA,CAAAlC,IAAA;cAAA,OAETtD,KAAK,CAACuD,GAAG,+BAAAb,MAAA,CAA+B8B,OAAO,CAACiB,EAAE,gBAAa,CAAC;YAAA;cAAjFzB,QAAO,GAAAwB,SAAA,CAAAhC,IAAA;cACbgB,OAAO,CAACQ,KAAI,GAAIhB,QAAQ,CAAC7D,IAAI;cAAAqF,SAAA,CAAAlC,IAAA;cAAA;YAAA;cAAAkC,SAAA,CAAAnC,IAAA;cAAAmC,SAAA,CAAA7B,EAAA,GAAA6B,SAAA;cAE7BpD,OAAO,CAACwB,KAAK,sCAAA4B,SAAA,CAAA7B,EAA2C,CAAC;YAAA;YAAA;cAAA,OAAA6B,SAAA,CAAA3B,IAAA;UAAA;QAAA,GAAAyB,QAAA;MAAA;IAE7D,CAAC;IACD;IACMI,aAAa,WAAAA,cAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAA/C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA8C,SAAA;QAAA,IAAAC,KAAA,EAAA7B,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAA4C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA1C,IAAA,GAAA0C,SAAA,CAAAzC,IAAA;YAAA;cAAAyC,SAAA,CAAA1C,IAAA;cAEZwC,KAAI,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAF,SAAA,CAAAzC,IAAA;cAAA,OACpBtD,KAAK,CAACkG,IAAI,kCAAAxD,MAAA,CACEiD,MAAI,CAACvF,OAAO,uBAC7C;gBAAE+D,IAAI,EAAEwB,MAAI,CAAClF,WAAW;gBAAE0F,KAAK,EAAER,MAAI,CAACvF;cAAQ,CAAC,EAC/C;gBAAEgG,OAAO,EAAE;kBAAEC,aAAa,WAAA3D,MAAA,CAAWmD,KAAK;gBAAG;cAAE,CACjD,CAAC;YAAA;cAJK7B,QAAO,GAAA+B,SAAA,CAAAvC,IAAA;cAKbpB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE2B,QAAQ,CAAC7D,IAAI,CAAC;cAC9CwF,MAAI,CAAC7E,SAAQ,GAAI,KAAK;cACtB6E,MAAI,CAACzD,aAAa,CAAC,CAAC;cAAA6D,SAAA,CAAAzC,IAAA;cAAA;YAAA;cAAAyC,SAAA,CAAA1C,IAAA;cAAA0C,SAAA,CAAApC,EAAA,GAAAoC,SAAA;cAEpB3D,OAAO,CAACwB,KAAK,CAAC,yBAAyB,EAAAmC,SAAA,CAAApC,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAoC,SAAA,CAAAlC,IAAA;UAAA;QAAA,GAAA+B,QAAA;MAAA;IAEnD,CAAC;IACKU,aAAa,WAAAA,cAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAA3D,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA0D,SAAA;QAAA,IAAAX,KAAA,EAAA7B,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAuD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArD,IAAA,GAAAqD,SAAA,CAAApD,IAAA;YAAA;cAAAoD,SAAA,CAAArD,IAAA;cAEXwC,KAAI,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAS,SAAA,CAAApD,IAAA;cAAA,OACpBtD,KAAK,CAAC2G,GAAG,kCAAAjE,MAAA,CACK6D,MAAI,CAACnG,OAAO,sBAAAsC,MAAA,CAAmB6D,MAAI,CAAC/B,OAAO,CAACiB,EAAE,QAC/E;gBAAEtB,IAAI,EAAEoC,MAAI,CAAC9F;cAAW,CAAC,EAC5B;gBAAE2F,OAAO,EAAE;kBAAEC,aAAa,WAAA3D,MAAA,CAAWmD,KAAK;gBAAG;cAAE,CAChD,CAAC;YAAA;cAJK7B,QAAO,GAAA0C,SAAA,CAAAlD,IAAA;cAKbpB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE2B,QAAQ,CAAC7D,IAAI,CAAC;cAC9CoG,MAAI,CAACvF,gBAAe,GAAI,KAAK;cAC7BuF,MAAI,CAACrE,aAAa,CAAC,CAAC,EAAE;cAAAwE,SAAA,CAAApD,IAAA;cAAA;YAAA;cAAAoD,SAAA,CAAArD,IAAA;cAAAqD,SAAA,CAAA/C,EAAA,GAAA+C,SAAA;cAEtBtE,OAAO,CAACwB,KAAK,CAAC,yBAAyB,EAAA8C,SAAA,CAAA/C,EAAO,CAAC;YAAA;YAAA;cAAA,OAAA+C,SAAA,CAAA7C,IAAA;UAAA;QAAA,GAAA2C,QAAA;MAAA;IAErD,CAAC;IACKI,aAAa,WAAAA,cAACrG,SAAS,EAAE;MAAA,IAAAsG,MAAA;MAAA,OAAAjE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAgE,SAAA;QAAA,IAAAjB,KAAA;QAAA,OAAAhD,mBAAA,GAAAK,IAAA,UAAA6D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;YAAA;cAAA0D,SAAA,CAAA3D,IAAA;cAErBwC,KAAI,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAe,SAAA,CAAA1D,IAAA;cAAA,OACrCtD,KAAK,UAAO,iDAAA0C,MAAA,CAAiDnC,SAAS,GAAI;gBAC9E6F,OAAO,EAAE;kBACPC,aAAa,WAAA3D,MAAA,CAAWmD,KAAK;gBAC/B;cACF,CAAC,CAAC;YAAA;cACFgB,MAAI,CAAC3E,aAAa,CAAC,CAAC,EAAE;cACtB2E,MAAI,CAACxF,qCAAoC,GAAI,KAAK;cAAA2F,SAAA,CAAA1D,IAAA;cAAA;YAAA;cAAA0D,SAAA,CAAA3D,IAAA;cAAA2D,SAAA,CAAArD,EAAA,GAAAqD,SAAA;cAElD5E,OAAO,CAACwB,KAAK,CAAC,yBAAyB,EAAAoD,SAAA,CAAArD,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAqD,SAAA,CAAAnD,IAAA;UAAA;QAAA,GAAAiD,QAAA;MAAA;IAEnD,CAAC;IAED;IACAG,oBAAoB,WAAAA,qBAACzC,OAAO,EAAE;MAC5B,IAAI,CAACrD,uBAAsB,GAAI,IAAI;MACnC,IAAI,CAACF,eAAc,GAAIuD,OAAO,CAACiB,EAAE;MACjC,IAAI,CAACvE,iBAAgB,GAAIsD,OAAO,CAACL,IAAI;IACvC,CAAC;IAED+C,qBAAqB,WAAAA,sBAAA,EAAG;MACtB,IAAI,CAAC/F,uBAAsB,GAAI,KAAK;IACtC,CAAC;IAEDgG,oBAAoB,WAAAA,qBAAC3C,OAAO,EAAE;MAC1B,IAAI,CAACpD,wBAAuB,GAAIoD,OAAO,CAACiB,EAAE;MAC1C,IAAI,CAACpE,qCAAoC,GAAI,IAAI;IACrD,CAAC;IAEC+F,mCAAmC,WAAAA,oCAAA,EAAG;MACpC,IAAI,CAAC/F,qCAAoC,GAAI,KAAK;IACpD,CAAC;IAEH;IACMgG,UAAU,WAAAA,WAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAA1E,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyE,SAAA;QAAA,IAAA1B,KAAA,EAAA2B,WAAA,EAAAxD,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAuE,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArE,IAAA,GAAAqE,SAAA,CAAApE,IAAA;YAAA;cAAAoE,SAAA,CAAArE,IAAA;cAEPwC,KAAI,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cACrCuB,WAAU,GAAI,IAAIG,IAAI,CAAC,CAAC;cAAAD,SAAA,CAAApE,IAAA;cAAA,OACPtD,KAAK,CAACkG,IAAI,CAC/B,oCAAoC,EACpC;gBAAE/B,IAAI,EAAEmD,MAAI,CAAC5G,QAAQ;gBAAEC,WAAW,EAAE2G,MAAI,CAAC3G,WAAW;gBAAE6D,OAAO,EAAE8C,MAAI,CAACM,iBAAiB;gBAAEnE,WAAW,EAAE+D,WAAW;gBAAE9D,QAAQ,EAAE4D,MAAI,CAAC1G;cAAU,CAAC,EAC3I;gBAAEwF,OAAO,EAAE;kBAAEC,aAAa,WAAA3D,MAAA,CAAWmD,KAAK;gBAAG;cAAE,CACjD,CAAC;YAAA;cAJK7B,QAAO,GAAA0D,SAAA,CAAAlE,IAAA;cAKbpB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE2B,QAAQ,CAAC7D,IAAI,CAAC;cAC3CmH,MAAI,CAAChG,gBAAe,GAAI,KAAK;cAC7BgG,MAAI,CAACpF,aAAa,CAAC,CAAC,EAAE;cAAAwF,SAAA,CAAApE,IAAA;cAAA;YAAA;cAAAoE,SAAA,CAAArE,IAAA;cAAAqE,SAAA,CAAA/D,EAAA,GAAA+D,SAAA;cAEtBtF,OAAO,CAACwB,KAAK,CAAC,sBAAsB,EAAE8D,SAAA,CAAA/D,EAAA,CAAMK,QAAQ,CAAC;YAAA;YAAA;cAAA,OAAA0D,SAAA,CAAA7D,IAAA;UAAA;QAAA,GAAA0D,QAAA;MAAA;IAEzD,CAAC;IACIM,QAAQ,WAAAA,SAAC9G,YAAY,EAAE;MAAA,IAAA+G,MAAA;MAAA,OAAAlF,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAiF,SAAA;QAAA,IAAAlC,KAAA,EAAA7B,QAAA;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAA8E,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5E,IAAA,GAAA4E,SAAA,CAAA3E,IAAA;YAAA;cAAA2E,SAAA,CAAA5E,IAAA;cAEpBwC,KAAI,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAC3C;cAAAgC,SAAA,CAAA3E,IAAA;cAAA,OACuBtD,KAAK,CAAC2G,GAAG,2CAAAjE,MAAA,CACYoF,MAAI,CAAC/G,YAAY,CAAC0E,EAAE,GAC9D;gBACEtB,IAAI,EAAE2D,MAAI,CAACpH,QAAQ;gBACnBC,WAAW,EAAEmH,MAAI,CAACnH,WAAW;gBAC7B6D,OAAO,EAAEsD,MAAI,CAACF,iBAAiB;gBAC/BlE,QAAQ,EAAEoE,MAAI,CAAClH;cACjB,CAAC,EACD;gBAAEwF,OAAO,EAAE;kBAAEC,aAAa,WAAA3D,MAAA,CAAWmD,KAAK;gBAAG;cAAE,CACjD,CAAC;YAAA;cATK7B,QAAO,GAAAiE,SAAA,CAAAzE,IAAA;cAWbpB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE2B,QAAQ,CAAC7D,IAAI,CAAC;cAC3C+H,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;cACxBN,MAAI,CAAC7C,oBAAoB,CAAC,CAAC;cAC3B;cAAAgD,SAAA,CAAA3E,IAAA;cAAA;YAAA;cAAA2E,SAAA,CAAA5E,IAAA;cAAA4E,SAAA,CAAAtE,EAAA,GAAAsE,SAAA;cAEA7F,OAAO,CAACwB,KAAK,CAAC,sBAAsB,EAAAqE,SAAA,CAAAtE,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAsE,SAAA,CAAApE,IAAA;UAAA;QAAA,GAAAkE,QAAA;MAAA;IAEhD,CAAC;IACKM,UAAU,WAAAA,WAAC7H,MAAM,EAAE;MAAA,IAAA8H,MAAA;MAAA,OAAA1F,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyF,UAAA;QAAA,OAAA1F,mBAAA,GAAAK,IAAA,UAAAsF,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAApF,IAAA,GAAAoF,UAAA,CAAAnF,IAAA;YAAA;cAAAmF,UAAA,CAAApF,IAAA;cAAAoF,UAAA,CAAAnF,IAAA;cAAA,OAEftD,KAAK,UAAO,2CAAA0C,MAAA,CAA2ClC,MAAM,CAAG,CAAC;YAAA;cACvE8H,MAAI,CAACrD,oBAAoB,CAAC,CAAC,EAAE;cAC7BiD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;cAAAK,UAAA,CAAAnF,IAAA;cAAA;YAAA;cAAAmF,UAAA,CAAApF,IAAA;cAAAoF,UAAA,CAAA9E,EAAA,GAAA8E,UAAA;cAExBrG,OAAO,CAACwB,KAAK,CAAC,sBAAsB,EAAA6E,UAAA,CAAA9E,EAAO,CAAC;YAAA;YAAA;cAAA,OAAA8E,UAAA,CAAA5E,IAAA;UAAA;QAAA,GAAA0E,SAAA;MAAA;IAEhD,CAAC;IACC;IACF;IACA;IACAG,gBAAgB,WAAAA,iBAAClE,OAAO,EAAE;MACxB,IAAI,CAAClD,gBAAe,GAAI,IAAI;MAC5B,IAAI,CAACb,WAAU,GAAI+D,OAAO,CAAC/D,WAAW;MACtC,IAAI,CAACmH,iBAAgB,GAAIpD,OAAO,CAACiB,EAAE;IACrC,CAAC;IACD;IACAkD,iBAAiB,WAAAA,kBAAA,EAAG;MAClB,IAAI,CAACrH,gBAAe,GAAI,KAAK;IAC/B,CAAC;IACD;IACAsH,eAAe,WAAAA,gBAACC,IAAI,EAAE;MACpB,IAAI,CAAC9H,YAAW,GAAI8H,IAAI;IAC1B,CAAC;IACD;IACAC,iBAAiB,WAAAA,kBAACD,IAAI,EAAE;MACxB,IAAI,CAACtH,oBAAmB,GAAI,IAAI;MAChC,IAAI,CAACb,QAAO,GAAImI,IAAI,CAAC1E,IAAI;MACzB,IAAI,CAACxD,WAAU,GAAIkI,IAAI,CAAClI,WAAW;MACnC,IAAI,CAACF,WAAU,GAAIoI,IAAI,CAACpI,WAAW,EAAG;MACtC,IAAI,CAACG,OAAM,GAAIiI,IAAI,CAACjI,OAAO,EAAE;IAC/B,CAAC;IAECmI,kBAAkB,WAAAA,mBAAA,EAAG;MACnB,IAAI,CAACxH,oBAAmB,GAAI,KAAK;IACnC,CAAC;IACD;IACAyH,qBAAqB,WAAAA,sBAAA,EAAG;MACtB,IAAI,CAACjI,YAAW,GAAI,KAAK;IAC3B;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}