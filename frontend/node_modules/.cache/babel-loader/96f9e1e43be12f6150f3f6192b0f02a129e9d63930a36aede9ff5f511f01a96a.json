{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      editedBoardName: '',\n      editedBoardId: null,\n      editBoardModalVisible: false,\n      editedBoardDescription: '',\n      editedBoardDueDate: '',\n      boards: [],\n      deleteConfirmationModalVisible: false,\n      confirmedDeleteBoardId: null\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBoards();\n  },\n  methods: {\n    fetchBoards: function fetchBoards() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://127.0.0.1:8000/board/list_board/');\n            case 3:\n              response = _context.sent;\n              _this.boards = response.data;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching boards:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    deleteBoard: function deleteBoard(boardId) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/board/\".concat(boardId, \"/delete_board/\"));\n            case 3:\n              _this2.fetchBoards();\n              _this2.closeDeleteConfirmationModal();\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error deleting board:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    openBoard: function openBoard(boardId) {\n      this.$router.push(\"/section-table/\".concat(boardId, \"/create_section\"));\n    },\n    openEditBoardModal: function openEditBoardModal(board) {\n      this.editBoardModalVisible = true;\n      this.editedBoardId = board.id;\n      this.editedBoardName = board.name;\n      this.editedBoardDescription = board.description;\n    },\n    closeEditBoardModal: function closeEditBoardModal() {\n      this.editBoardModalVisible = false;\n    },\n    confirmDeleteBoard: function confirmDeleteBoard(board) {\n      this.confirmedDeleteBoardId = board.id;\n      this.deleteConfirmationModalVisible = true;\n    },\n    closeDeleteConfirmationModal: function closeDeleteConfirmationModal() {\n      this.deleteConfirmationModalVisible = false;\n    }\n  },\n  computed: {\n    boardTotalLength: function boardTotalLength() {\n      return this.boards.length;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","editedBoardName","editedBoardId","editBoardModalVisible","editedBoardDescription","editedBoardDueDate","boards","deleteConfirmationModalVisible","confirmedDeleteBoardId","mounted","fetchBoards","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","t0","console","error","stop","deleteBoard","boardId","_this2","_callee2","_callee2$","_context2","concat","closeDeleteConfirmationModal","openBoard","$router","push","openEditBoardModal","board","id","name","description","closeEditBoardModal","confirmDeleteBoard","computed","boardTotalLength","length"],"sources":["C:\\Users\\szymo\\Desktop\\gole baby i milfy\\studia\\scrum\\test17kwietnia\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\Tables.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-board\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Boards</h1>\r\n      </div>\r\n\r\n      <div class=\"column is-12 box\">\r\n        <table class=\"table is-fullwidth\" v-if=\"boardTotalLength\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Create Date</th>\r\n              <th>Due Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in boards\" :key=\"board.id\">\r\n              <td>{{ board.name }}</td>\r\n              <td>{{ board.description }}</td>\r\n              <td>{{ board.create_date }}</td>\r\n              <td>{{ board.due_date }}</td>\r\n              <td>\r\n                <button @click=\"confirmDeleteBoard(board)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Delete</button>\r\n                <button @click=\"openEditBoardModal(board)\" class=\"button is-info\">Edit</button>\r\n                <button @click=\"openBoard(board.id)\" class=\"button is-primary\" style=\"margin-left: 15px;\">Open</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-else>You don't have any boards...</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal do potwierdzenia usunięcia tablicy -->\r\n  <div v-if=\"deleteConfirmationModalVisible\" class=\"modal\" >\r\n    <div class=\"modal-content\" id=\"delete-board\" style=\"max-width: 400px;\">\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Usuń tablice</h2>\r\n      <p>Na pewno chcesz usunąć tablice?</p>\r\n      <div style=\"margin-top: 20px;\">\r\n        <button @click=\"deleteBoard(confirmedDeleteBoardId)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Tak</button>\r\n        <button @click=\"closeDeleteConfirmationModal\" class=\"button is-info\">Nie</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      editedBoardName: '',\r\n      editedBoardId: null,\r\n      editBoardModalVisible: false,\r\n      editedBoardDescription: '',\r\n      editedBoardDueDate: '',\r\n      boards: [],\r\n      deleteConfirmationModalVisible: false,\r\n      confirmedDeleteBoardId: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchBoards();\r\n  },\r\n  methods: {\r\n    async fetchBoards() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/board/list_board/');\r\n        this.boards = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching boards:', error);\r\n      }\r\n    },\r\n    async deleteBoard(boardId) {\r\n      try {\r\n        await axios.delete(`http://127.0.0.1:8000/board/${boardId}/delete_board/`);\r\n        this.fetchBoards();\r\n        this.closeDeleteConfirmationModal();\r\n      } catch (error) {\r\n        console.error('Error deleting board:', error);\r\n      } \r\n    },\r\n    openBoard(boardId) {\r\n      this.$router.push(`/section-table/${boardId}/create_section`);\r\n    },\r\n    openEditBoardModal(board) {\r\n      this.editBoardModalVisible = true;\r\n      this.editedBoardId = board.id;\r\n      this.editedBoardName = board.name;\r\n      this.editedBoardDescription = board.description;\r\n    },\r\n\r\n    closeEditBoardModal() {\r\n      this.editBoardModalVisible = false;\r\n    },\r\n\r\n    confirmDeleteBoard(board) {\r\n      this.confirmedDeleteBoardId = board.id;\r\n      this.deleteConfirmationModalVisible = true;\r\n    },\r\n\r\n    closeDeleteConfirmationModal() {\r\n      this.deleteConfirmationModalVisible = false;\r\n    },\r\n  },\r\n  computed: {\r\n    boardTotalLength() {\r\n      return this.boards.length;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  overflow: auto;\r\n  display: block !important;\r\n}\r\n\r\n.modal-content {\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  width: 80%;\r\n  border-radius: 5px;\r\n  background-color: #f0a2a2; /* Zaktualizowany kolor tła */\r\n  position: relative;\r\n  border: 3px solid #7c0e0e; /* Zaktualizowany kolor ramki */\r\n  text-align: center;\r\n  color:#000;\r\n  animation: fadeIn 0.5s ease-in-out forwards;\r\n}\r\n\r\n\r\n.close {\r\n  color: #aaaaaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: #000;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-20px); /* Przesunięcie o -20px w górę */\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n    transform: translateY(0); /* Bez przesunięcia */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}