{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _methods;\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport draggable from \"vuedraggable\";\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    var _ref;\n    return _ref = {\n      boardId: null,\n      boardName: '',\n      sections: [],\n      tasks: [],\n      sectionId: null,\n      newSectionId: null,\n      taskId: null,\n      sectionName: '',\n      taskName: '',\n      description: '',\n      dueDate: '',\n      dragging: false,\n      taskUsers: []\n    }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"sections\", []), \"tasks\", []), \"showModal\", false), \"selectedTask\", null), \"editModalVisible\", false), \"editedSectionId\", null), \"editedSectionName\", ''), \"editSectionModalVisible\", false), \"confirmedDeleteSectionId\", null), \"deleteConfirmationModalVisibleSection\", false), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"taskModalVisible\", false), \"editTaskModalVisible\", false), \"boardUsers\", []), \"boardDescription\", ''), \"boardCreateDate\", ''), \"boardDueDate\", ''), \"container\", null), \"draggedtaskid\", null);\n  },\n  mounted: function mounted() {\n    this.boardId = this.$route.params.board_id;\n    this.sectionId = this.$route.params.section_id;\n    this.fetchBoardName();\n    this.fetchSections();\n    this.fetchBoardData();\n    console.log(\"Params:\", this.$route.params);\n  },\n  methods: (_methods = {\n    editSection: function editSection(sectionId) {\n      this.$router.push(\"/section/\".concat(this.$route.params.board_id, \"/edit-section/\").concat(sectionId));\n    },\n    onDragStart: function onDragStart(event) {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"dragged task id \" + event.item.querySelector('.task-name').dataset.taskId);\n              _this.draggedtaskid = event.item.querySelector('.task-name').dataset.taskId;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    onDragEnd: function onDragEnd(event) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var container, targetSection, newSectionId, taskId, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              console.log(\"event log: \" + event); // Wyświetlenie obiektu event w konsoli\n              console.log(\"event item: \" + event.item); // Wyświetlenie obiektu item w konsoli\n              container = event.to; // Sprawdzenie, czy kontener jest zdefiniowany\n              if (container) {\n                _context2.next = 7;\n                break;\n              }\n              console.error('Container is undefined');\n              return _context2.abrupt(\"return\");\n            case 7:\n              // Uzyskanie sekcji docelowej\n              targetSection = container.closest('.section-card'); // Sprawdzenie, czy udało się znaleźć sekcję docelową\n              if (targetSection) {\n                _context2.next = 11;\n                break;\n              }\n              console.error('Target section not found');\n              return _context2.abrupt(\"return\");\n            case 11:\n              // Uzyskanie ID sekcji docelowej\n              newSectionId = targetSection.querySelector('.section-name').dataset.sectionId; // Get ID of task\n              taskId = _this2.draggedtaskid;\n              console.log(\"task ID: \" + taskId);\n              _context2.next = 16;\n              return axios.patch(\"http://127.0.0.1:8000/task/update_task_section/\".concat(taskId, \"/section/\").concat(newSectionId));\n            case 16:\n              response = _context2.sent;\n              console.log(response.data);\n              console.log(\"Dziala\"); // Logowanie odpowiedzi z serwera\n              _context2.next = 24;\n              break;\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error updating task section:', _context2.t0);\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 21]]);\n      }))();\n    },\n    // ------------ Displaying board info ----------------\n    fetchBoardData: function fetchBoardData() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var boardResponse, usersResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this3.boardId, \"/\"));\n            case 3:\n              boardResponse = _context3.sent;\n              // Ustawienie opisu tablicy\n              _this3.boardDescription = boardResponse.data.description;\n              _this3.boardCreateDate = boardResponse.data.create_date;\n              _this3.boardDueDate = boardResponse.data.due_date;\n              // Pobranie listy użytkowników przypisanych do tablicy\n              _context3.next = 9;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this3.boardId, \"/users/\"));\n            case 9:\n              usersResponse = _context3.sent;\n              _this3.boardUsers = usersResponse.data;\n              _context3.next = 16;\n              break;\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error fetching board data:', _context3.t0);\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 13]]);\n      }))();\n    },\n    fetchTaskUsers: function fetchTaskUsers(taskId) {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var response, task;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/task/\".concat(taskId, \"/task_user_list/\"));\n            case 3:\n              response = _context4.sent;\n              // Aktualizacja danych zadania o listę użytkowników\n              task = _this4.tasks.find(function (task) {\n                return task.id === taskId;\n              });\n              if (task) {\n                task.users = response.data;\n              }\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error fetching task users:', _context4.t0);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 8]]);\n      }))();\n    },\n    fetchTasksForSection: function fetchTasksForSection(section) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/task/\".concat(section.id, \"/task_list/\"));\n            case 3:\n              response = _context5.sent;\n              // Aktualizacja danych dla każdego zadania\n              section.tasks = response.data.map(function (task) {\n                return _objectSpread(_objectSpread({}, task), {}, {\n                  users: [] // Początkowo pusta lista użytkowników\n                });\n              });\n              _context5.next = 10;\n              break;\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error(\"Error fetching tasks for section:\", _context5.t0);\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 7]]);\n      }))();\n    },\n    // ----------- Fetche -----------\n    fetchBoardName: function fetchBoardName() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(_this5.boardId, \"/\"));\n            case 3:\n              response = _context6.sent;\n              _this5.boardName = response.data.name;\n              _context6.next = 10;\n              break;\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error fetching board name:', _context6.t0);\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 7]]);\n      }))();\n    },\n    fetchSections: function fetchSections() {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, _iterator, _step, section;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/section/\".concat(_this6.boardId, \"/sections/\"));\n            case 3:\n              response = _context7.sent;\n              _this6.sections = response.data;\n              _iterator = _createForOfIteratorHelper(_this6.sections);\n              _context7.prev = 6;\n              _iterator.s();\n            case 8:\n              if ((_step = _iterator.n()).done) {\n                _context7.next = 16;\n                break;\n              }\n              section = _step.value;\n              if (section.tasks) {\n                _context7.next = 14;\n                break;\n              }\n              section.tasks = []; // Inicjalizacja pustej tablicy tasków, jeśli nie istnieje\n              _context7.next = 14;\n              return _this6.fetchTasksForSection(section);\n            case 14:\n              _context7.next = 8;\n              break;\n            case 16:\n              _context7.next = 21;\n              break;\n            case 18:\n              _context7.prev = 18;\n              _context7.t0 = _context7[\"catch\"](6);\n              _iterator.e(_context7.t0);\n            case 21:\n              _context7.prev = 21;\n              _iterator.f();\n              return _context7.finish(21);\n            case 24:\n              _context7.next = 29;\n              break;\n            case 26:\n              _context7.prev = 26;\n              _context7.t1 = _context7[\"catch\"](0);\n              console.error('Error fetching sections:', _context7.t1);\n            case 29:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 26], [6, 18, 21, 24]]);\n      }))();\n    }\n  }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_methods, \"fetchTasksForSection\", function fetchTasksForSection(section) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return axios.get(\"http://127.0.0.1:8000/task/\".concat(section.id, \"/task_list/\"));\n          case 3:\n            response = _context8.sent;\n            section.tasks = response.data;\n            _context8.next = 10;\n            break;\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.error(\"Error fetching tasks for section:\", _context8.t0);\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[0, 7]]);\n    }))();\n  }), \"createSection\", function createSection() {\n    var _this7 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var token, response;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            token = localStorage.getItem('token');\n            _context9.next = 4;\n            return axios.post(\"http://127.0.0.1:8000/section/\".concat(_this7.boardId, \"/create_section/\"), {\n              name: _this7.sectionName,\n              board: _this7.boardId\n            }, {\n              headers: {\n                Authorization: \"Token \".concat(token)\n              }\n            });\n          case 4:\n            response = _context9.sent;\n            console.log('Section created:', response.data);\n            _this7.showModal = false;\n            _this7.fetchSections();\n            _context9.next = 13;\n            break;\n          case 10:\n            _context9.prev = 10;\n            _context9.t0 = _context9[\"catch\"](0);\n            console.error('Error creating section:', _context9.t0);\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9, null, [[0, 10]]);\n    }))();\n  }), \"updateSection\", function updateSection() {\n    var _this8 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var token, response;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            token = localStorage.getItem('token');\n            _context10.next = 4;\n            return axios.put(\"http://127.0.0.1:8000/section/\".concat(_this8.boardId, \"/update_section/\").concat(_this8.section.id, \"/\"), {\n              name: _this8.sectionName\n            }, {\n              headers: {\n                Authorization: \"Token \".concat(token)\n              }\n            });\n          case 4:\n            response = _context10.sent;\n            console.log('Section updated:', response.data);\n            _this8.editModalVisible = false;\n            _this8.fetchSections(); // Ponowne pobranie sekcji po aktualizacji\n            _context10.next = 13;\n            break;\n          case 10:\n            _context10.prev = 10;\n            _context10.t0 = _context10[\"catch\"](0);\n            console.error('Error updating section:', _context10.t0);\n          case 13:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10, null, [[0, 10]]);\n    }))();\n  }), \"deleteSection\", function deleteSection(sectionId) {\n    var _this9 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var token;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            token = localStorage.getItem('token');\n            _context11.next = 4;\n            return axios[\"delete\"](\"http://127.0.0.1:8000/section/delete_section/\".concat(sectionId), {\n              headers: {\n                Authorization: \"Token \".concat(token)\n              }\n            });\n          case 4:\n            _this9.fetchSections(); // Odśwież listę sekcji po usunięciu\n            _this9.deleteConfirmationModalVisibleSection = false;\n            _context11.next = 11;\n            break;\n          case 8:\n            _context11.prev = 8;\n            _context11.t0 = _context11[\"catch\"](0);\n            console.error('Error deleting section:', _context11.t0);\n          case 11:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11, null, [[0, 8]]);\n    }))();\n  }), \"openEditModalSection\", function openEditModalSection(section) {\n    this.editSectionModalVisible = true;\n    this.editedSectionId = section.id;\n    this.editedSectionName = section.name;\n  }), \"closeEditModalSection\", function closeEditModalSection() {\n    this.editSectionModalVisible = false;\n  }), \"confirmDeleteSection\", function confirmDeleteSection(section) {\n    this.confirmedDeleteSectionId = section.id;\n    this.deleteConfirmationModalVisibleSection = true;\n  }), \"closeDeleteConfirmationModalSection\", function closeDeleteConfirmationModalSection() {\n    this.deleteConfirmationModalVisibleSection = false;\n  }), \"createTask\", function createTask() {\n    var _this10 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n      var token, currentDate, response;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            token = localStorage.getItem('token');\n            currentDate = new Date();\n            _context12.next = 5;\n            return axios.post('http://127.0.0.1:8000/task/create/', {\n              name: _this10.taskName,\n              description: _this10.description,\n              section: _this10.selectedSectionId,\n              create_date: currentDate,\n              due_date: _this10.dueDate\n            }, {\n              headers: {\n                Authorization: \"Token \".concat(token)\n              }\n            });\n          case 5:\n            response = _context12.sent;\n            console.log('Task created:', response.data);\n            _this10.taskModalVisible = false;\n            _this10.fetchSections(); // Po utworzeniu zadania odśwież listę sekcji, aby wyświetlić nowe zadanie\n            _context12.next = 14;\n            break;\n          case 11:\n            _context12.prev = 11;\n            _context12.t0 = _context12[\"catch\"](0);\n            console.error('Error creating task:', _context12.t0.response);\n          case 14:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12, null, [[0, 11]]);\n    }))();\n  }), \"editTask\", function editTask(selectedTask) {\n    var _this11 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n      var token, response;\n      return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            token = localStorage.getItem('token'); //const currentDate = new Date();\n            _context13.next = 4;\n            return axios.put(\"http://127.0.0.1:8000/task/update_task/\".concat(_this11.selectedTask.id), {\n              name: _this11.taskName,\n              description: _this11.description,\n              section: _this11.selectedSectionId,\n              due_date: _this11.dueDate\n            }, {\n              headers: {\n                Authorization: \"Token \".concat(token)\n              }\n            });\n          case 4:\n            response = _context13.sent;\n            console.log('Task updated:', response.data);\n            window.location.reload();\n            _this11.fetchTasksForSection();\n            // Tutaj możesz dodać odpowiednią obsługę po udanej aktualizacji zadania, np. odświeżenie listy zadań\n            _context13.next = 13;\n            break;\n          case 10:\n            _context13.prev = 10;\n            _context13.t0 = _context13[\"catch\"](0);\n            console.error('Error updating task:', _context13.t0);\n          case 13:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13, null, [[0, 10]]);\n    }))();\n  }), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_methods, \"deleteTask\", function deleteTask(taskId) {\n    var _this12 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n      return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return axios[\"delete\"](\"http://127.0.0.1:8000/task/delete_task/\".concat(taskId));\n          case 3:\n            _this12.fetchTasksForSection(); // Aktualizuj listę zadań po usunięciu\n            window.location.reload();\n            _context14.next = 10;\n            break;\n          case 7:\n            _context14.prev = 7;\n            _context14.t0 = _context14[\"catch\"](0);\n            console.error('Error deleting task:', _context14.t0);\n          case 10:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, _callee14, null, [[0, 7]]);\n    }))();\n  }), \"openAddTaskModal\", function openAddTaskModal(section) {\n    this.taskModalVisible = true;\n    this.sectionName = section.sectionName;\n    this.selectedSectionId = section.id;\n  }), \"closeAddTaskModal\", function closeAddTaskModal() {\n    this.taskModalVisible = false;\n  }), \"showTaskDetails\", function showTaskDetails(task) {\n    this.selectedTask = task;\n  }), \"openEditModalTask\", function openEditModalTask(task) {\n    this.editTaskModalVisible = true;\n    this.taskName = task.name;\n    this.description = task.description;\n    this.sectionName = task.sectionName; // Check if this property is correct\n    this.dueDate = task.dueDate; // Check if this property is correct\n  }), \"closeTaskEditModal\", function closeTaskEditModal() {\n    this.editTaskModalVisible = false;\n  }), \"closeTaskDetailsModal\", function closeTaskDetailsModal() {\n    this.selectedTask = false;\n  }))\n};","map":{"version":3,"names":["axios","draggable","components","data","_ref","boardId","boardName","sections","tasks","sectionId","newSectionId","taskId","sectionName","taskName","description","dueDate","dragging","taskUsers","_defineProperty","mounted","$route","params","board_id","section_id","fetchBoardName","fetchSections","fetchBoardData","console","log","methods","_methods","editSection","$router","push","concat","onDragStart","event","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","item","querySelector","dataset","draggedtaskid","stop","onDragEnd","_this2","_callee2","container","targetSection","response","_callee2$","_context2","to","error","abrupt","closest","patch","sent","t0","_this3","_callee3","boardResponse","usersResponse","_callee3$","_context3","get","boardDescription","boardCreateDate","create_date","boardDueDate","due_date","boardUsers","fetchTaskUsers","_this4","_callee4","task","_callee4$","_context4","find","id","users","fetchTasksForSection","section","_callee5","_callee5$","_context5","map","_objectSpread","_this5","_callee6","_callee6$","_context6","name","_this6","_callee7","_iterator","_step","_callee7$","_context7","_createForOfIteratorHelper","s","n","done","value","e","f","finish","t1","_callee8","_callee8$","_context8","createSection","_this7","_callee9","token","_callee9$","_context9","localStorage","getItem","post","board","headers","Authorization","showModal","updateSection","_this8","_callee10","_callee10$","_context10","put","editModalVisible","deleteSection","_this9","_callee11","_callee11$","_context11","deleteConfirmationModalVisibleSection","openEditModalSection","editSectionModalVisible","editedSectionId","editedSectionName","closeEditModalSection","confirmDeleteSection","confirmedDeleteSectionId","closeDeleteConfirmationModalSection","createTask","_this10","_callee12","currentDate","_callee12$","_context12","Date","selectedSectionId","taskModalVisible","editTask","selectedTask","_this11","_callee13","_callee13$","_context13","window","location","reload","deleteTask","_this12","_callee14","_callee14$","_context14","openAddTaskModal","closeAddTaskModal","showTaskDetails","openEditModalTask","editTaskModalVisible","closeTaskEditModal","closeTaskDetailsModal"],"sources":["C:\\Users\\szymo\\Desktop\\gole baby i milfy\\studia\\scrum\\test17kwietnia\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\SectionTable.vue"],"sourcesContent":["<template>\r\n<div class=\"page-section-table\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Sekcje</h1>\r\n      </div>\r\n      <div class=\"column is-12 box\">\r\n        <h2 class=\"subtitle\">Informacje o tablicy</h2>\r\n        <p><strong>Opis:</strong> {{ boardDescription }}</p>\r\n        <p><strong>Data utworzenia:</strong> {{ boardCreateDate }}</p>\r\n        <p><strong>Termin:</strong> {{ boardDueDate }}</p>\r\n        <h2 class=\"subtitle\" style=\"margin-top: 20px;\">Użytkownicy przypisani do tablicy:</h2>\r\n        <ul>\r\n          <li v-for=\"user in boardUsers\" :key=\"user.id\">\r\n            {{ user.user_detail.email }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"section-table-container\">\r\n   <!-- Nagłówek tabeli z nazwą tablicy -->\r\n   <h1 class=\"board-title\">Sekcja dla tablicy: {{ boardName }}</h1>\r\n   <!-- Kontener sekcji i przycisku do dodawania nowej sekcji -->\r\n   <h2 class=\"section-edit-info\">Kliknij na nazwę sekcji by móc ją edytować!</h2>\r\n   <div class=\"section-container\">\r\n    <div class=\"section-card\" v-for=\"section in sections\" :key=\"section.id\">\r\n      <div class=\"section-name\" id=\"section-title\" @click=\"editSection(section.id)\" :data-section-id=\"section.id\">\r\n        <b>{{ section.name }}</b> \r\n      </div>\r\n\r\n      <!-- Ramka z listą zadań -->\r\n      <button @click=\"confirmDeleteSection(section)\" class=\"button is-danger delete-section-btn\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n      \r\n      <draggable  v-model=\"section.tasks\" group=\"tasks\" animation = \"200\" ghost-class=\"ghost-card\" @start=\"onDragStart($event)\" @end=\"onDragEnd($event)\" >\r\n        <template #item=\"{element}\">\r\n          <div class=\"task-list-frame\">\r\n            \r\n              <div class=\"task-name-frame\">\r\n                <div class=\"task-name\" :data-task-id=\"element.id\" @click=\"showTaskDetails(element)\">\r\n                 {{ element.name }} - {{ element.users.length }} użytkowników\r\n                </div>\r\n              </div>\r\n           \r\n          </div>\r\n        </template>\r\n      </draggable>\r\n\r\n      <!-- Przycisk do dodawania nowego zadania -->\r\n      <button @click=\"openAddTaskModal(section)\" class=\"add-task-button\">Dodaj zadanie</button>\r\n  </div>\r\n\r\n     <!-- Przycisk do dodawania nowej sekcji -->\r\n     <div class=\"add-section-btn-container\">\r\n       <button class=\"add-section-btn\" @click=\"showModal = true\"><i class=\"fas fa-plus\" style=\"font-size: 50px;\"></i></button>\r\n     </div>\r\n   </div>\r\n\r\n    <!-- ------------------------------ MODALE  SEKCJA--------------------------------------------------------------------------------------- -->\r\n    <!-- Modal do potwierdzenia usunięcia sekcji -->\r\n  <div v-if=\"deleteConfirmationModalVisibleSection\" class=\"modal\" >\r\n    <div class=\"modal-content\" id=\"delete-section\" style=\"max-width: 400px;\">\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Usuń sekcję</h2>\r\n      <p>Na pewno chcesz usunąć sekcję?</p>\r\n      <div style=\"margin-top: 20px;\">\r\n        <button @click=\"deleteSection(confirmedDeleteSectionId)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Tak</button>\r\n        <button @click=\"closeDeleteConfirmationModalSection\" class=\"button is-info\">Nie</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n   <!-- ----------- Modal do tworzenia nowej sekcji ----------- -->\r\n   <div v-if=\"showModal\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"showModal = false\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Podaj nazwę sekcji</h2>\r\n       <form @submit.prevent=\"createSection\">\r\n         <div class=\"form-group\">\r\n           <label for=\"sectionName\" class=\"section-name\">Nazwa sekcji: </label>\r\n           <input type=\"text\" id=\"sectionName\" v-model=\"sectionName\" class=\"form-control\">\r\n         </div>\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">Utwórz sekcję</button>\r\n       </form>\r\n     </div>\r\n   </div>\r\n\r\n   <!-- ----------- Modal do edycji sekcji ----------- -->\r\n   <div v-if=\"editSectionModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeEditModalSection\"><i class=\"fas fa-times\"></i></span>\r\n        <h2 class=\"section-name\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Edit Section</h2>\r\n        <form @submit.prevent=\"updateSection\">\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"editSectionName\" class=\"section-name\" style=\"margin-bottom: 15px; margin-right:15px; font-weight: bold; font-size: 15px;\">Nazwa sekcji:</label>\r\n            <input type=\"text\" id=\"editSectionName\" v-model=\"editedSectionName\" class=\"form-control\">\r\n          </div>\r\n          <button type=\"submit\" class=\"button is-primary\" style=\"margin-top: 15px;\">Edycja sekcji</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ------------------------------ MODALE  TASKI --------------------------------------------------------------------------------------- -->\r\n   <!-- ----------- Modal do dodawania nowego zadania ----------- -->\r\n   <div v-if=\"taskModalVisible\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"closeAddTaskModal\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Dodaj nowe zadanie</h2>\r\n       <form @submit.prevent=\"createTask\">\r\n         <div class=\"form-group\">\r\n           <label for=\"taskName\" class=\"section-name\">Nazwa zadania:</label>\r\n           <input type=\"text\" id=\"taskName\" v-model=\"taskName\" class=\"form-control\">\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"description\" class=\"section-name\">Opis:</label>\r\n           <textarea id=\"description\" v-model=\"description\" class=\"form-control\"></textarea>\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"dueDate\" class=\"section-name\">Termin:</label>\r\n           <input type=\"date\" id=\"dueDate\" v-model=\"dueDate\" class=\"form-control\">\r\n         </div>\r\n\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">utwórz zadanie</button>\r\n       </form>\r\n     </div>\r\n   </div>\r\n   \r\n   <!-- ----------- Modal z szczegółami zadania ----------- -->\r\n   <div v-if=\"selectedTask\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"selectedTask = null\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Informacje o zadaniu</h2>\r\n       <div class=\"task-details\">\r\n         <!-- Nazwa zadania -->\r\n         <div class=\"task-name\" style=\"color: black; font-size: 25px;\">{{ selectedTask.name }}</div>\r\n         <div class=\"task-description\" style=\"font-weight: bold;\">Opis: {{ selectedTask.description }}</div>\r\n         <div class=\"task-due-date\" style=\"margin-bottom: 10px;\"> \r\n          Termin: {{ selectedTask.due_date }}\r\n          <br>\r\n          <button @click=\"fetchTaskUsers(selectedTask.id)\" class=\"show-users-button\">Pokaż użytkowników</button>\r\n         </div>\r\n         <button @click=\"openEditModalTask(selectedTask.id)\" class=\"edit-section-button\">Edytuj</button>\r\n         <button @click=\"deleteTask(selectedTask.id)\" class=\"delete-task-button\">Usuń</button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n      <!-- ----------- Modal do edycji taska ----------- -->\r\n      <div v-if=\"editTaskModalVisible\" class=\"modal\">\r\n     <div class=\"modal-content\">\r\n       <span class=\"close\" @click=\"closeTaskEditModal\"><i class=\"fas fa-times\"></i></span>\r\n       <h2 class=\"section-name\">Edytuj</h2>\r\n       <form @submit.prevent=\"editTask\">\r\n        <div class=\"form-group\">\r\n           <label for=\"taskName\" class=\"section-name\" style=\"font-size: 20px; margin-right: 15px; margin-top: 10px;\">Nazwa:</label>\r\n           <input type=\"text\" id=\"taskName\" v-model=\"taskName\" class=\"form-control\">\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"description\" class=\"section-name\" style=\"font-size: 20px;  margin-right: 15px; margin-top: 10px;\">Opis:</label>\r\n           <textarea id=\"description\" v-model=\"description\" class=\"form-control\"></textarea>\r\n         </div>\r\n         <div class=\"form-group\">\r\n           <label for=\"dueDate\" class=\"section-name\" style=\"font-size: 20px;  margin-right: 15px; margin-top: 10px;\">Termin:</label>\r\n           <input type=\"date\" id=\"dueDate\" v-model=\"dueDate\" class=\"form-control\">\r\n         </div>\r\n         <button type=\"submit\" class=\"btn btn-primary section-name\">Edytuj</button>\r\n       </form>\r\n     </div>\r\n   </div>\r\n\r\n   <!-- ----------- Modal z użytkownikami przypisanymi do zadania ----------- -->\r\n<div v-if=\"taskUsers.length > 0\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <span class=\"close\" @click=\"taskUsers = []\"><i class=\"fas fa-times\"></i></span>\r\n    <h2 class=\"section-name\">Użytkownicy przypisani do zadania</h2>\r\n    <ul>\r\n      <li v-for=\"user in taskUsers\" :key=\"user.id\">\r\n        {{ user.user_detail.email }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n   <!-- Modal do potwierdzenia usunięcia taska -->\r\n  <div v-if=\"deleteConfirmationModalVisibleTask\" class=\"modal\" >\r\n    <div class=\"modal-content\" id=\"delete-task\" style=\"max-width: 400px;\">\r\n      <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Usuń zadanie</h2>\r\n      <p>Na pewno chcesz usunąć zadanie?</p>\r\n      <div style=\"margin-top: 20px;\">\r\n        <button @click=\"deleteTask(confirmedDeleteSectionId)\" class=\"button is-danger\" style=\"margin-right: 15px;\">Tak</button>\r\n        <button @click=\"closeDeleteConfirmationModalTask\" class=\"button is-info\">Nie</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport draggable from \"vuedraggable\";\r\n\r\nexport default {\r\n components: {\r\n   draggable\r\n },\r\n data() {\r\n   return {\r\n     boardId: null,\r\n     boardName: '',\r\n     sections: [],\r\n     tasks: [],\r\n     sectionId: null,\r\n     newSectionId: null,\r\n     taskId: null,\r\n     sectionName: '',\r\n     taskName: '',\r\n     description: '',\r\n     dueDate: '',\r\n     dragging: false,\r\n     taskUsers: [],\r\n     sections: [],\r\n     tasks: [],\r\n     // Modal dla dodania sekcji\r\n     showModal: false,\r\n     selectedTask: null,\r\n     // Modale dla sekcji\r\n     editModalVisible: false,\r\n     editedSectionId: null,\r\n     editedSectionName: '',\r\n     editSectionModalVisible: false,\r\n     confirmedDeleteSectionId: null,\r\n     deleteConfirmationModalVisibleSection: false,\r\n     // Modale dla taskow\r\n     taskModalVisible: false,\r\n     editTaskModalVisible: false,\r\n     // Board Info\r\n     boardUsers: [],\r\n     boardDescription: '',\r\n     boardCreateDate: '',\r\n     boardDueDate: '',\r\n     //Drag n drop\r\n     container: null,\r\n     draggedtaskid: null\r\n   };\r\n },\r\n mounted() {\r\n   this.boardId = this.$route.params.board_id;\r\n   this.sectionId = this.$route.params.section_id;\r\n   this.fetchBoardName();\r\n   this.fetchSections();\r\n   this.fetchBoardData(); \r\n   console.log(\"Params:\", this.$route.params);\r\n },\r\n methods: {\r\n  editSection(sectionId) {\r\n    this.$router.push(`/section/${this.$route.params.board_id}/edit-section/${sectionId}`);\r\n  },\r\n\r\n  async onDragStart(event){\r\n    console.log(\"dragged task id \" + event.item.querySelector('.task-name').dataset.taskId)\r\n    this.draggedtaskid = event.item.querySelector('.task-name').dataset.taskId\r\n  },\r\n\r\n  async onDragEnd(event) {\r\n  try {\r\n    console.log(\"event log: \" + event); // Wyświetlenie obiektu event w konsoli\r\n    console.log(\"event item: \" + event.item); // Wyświetlenie obiektu item w konsoli\r\n\r\n    \r\n    const container = event.to;\r\n    \r\n    // Sprawdzenie, czy kontener jest zdefiniowany\r\n    if (!container) {\r\n      console.error('Container is undefined');\r\n      return;\r\n    }\r\n\r\n    // Uzyskanie sekcji docelowej\r\n    const targetSection = container.closest('.section-card');\r\n    \r\n    // Sprawdzenie, czy udało się znaleźć sekcję docelową\r\n    if (!targetSection) {\r\n      console.error('Target section not found');\r\n      return;\r\n    }\r\n\r\n    // Uzyskanie ID sekcji docelowej\r\n    const newSectionId = targetSection.querySelector('.section-name').dataset.sectionId;\r\n\r\n    // Get ID of task\r\n    const taskId = this.draggedtaskid\r\n    console.log(\"task ID: \" + taskId);\r\n\r\n    const response = await axios.patch(`http://127.0.0.1:8000/task/update_task_section/${taskId}/section/${newSectionId}`);\r\n    console.log(response.data);\r\n    console.log(\"Dziala\") // Logowanie odpowiedzi z serwera\r\n  } catch (error) {\r\n    console.error('Error updating task section:', error);\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\n    // ------------ Displaying board info ----------------\r\n    async fetchBoardData() {\r\n      try {\r\n        // Pobranie danych tablicy z backendu\r\n        const boardResponse = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/`);\r\n        // Ustawienie opisu tablicy\r\n        this.boardDescription = boardResponse.data.description;\r\n        this.boardCreateDate = boardResponse.data.create_date;\r\n        this.boardDueDate = boardResponse.data.due_date;\r\n        // Pobranie listy użytkowników przypisanych do tablicy\r\n        const usersResponse = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/users/`);\r\n        this.boardUsers = usersResponse.data;\r\n      } catch (error) {\r\n        console.error('Error fetching board data:', error);\r\n      }\r\n    },\r\n\r\n    async fetchTaskUsers(taskId) {\r\n  try {\r\n    const response = await axios.get(`http://127.0.0.1:8000/task/${taskId}/task_user_list/`);\r\n    // Aktualizacja danych zadania o listę użytkowników\r\n    const task = this.tasks.find(task => task.id === taskId);\r\n    if (task) {\r\n      task.users = response.data;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching task users:', error);\r\n  }\r\n},\r\n\r\n  async fetchTasksForSection(section) {\r\n  try {\r\n    const response = await axios.get(`http://127.0.0.1:8000/task/${section.id}/task_list/`);\r\n    // Aktualizacja danych dla każdego zadania\r\n    section.tasks = response.data.map(task => {\r\n      return {\r\n        ...task,\r\n        users: [] // Początkowo pusta lista użytkowników\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error(`Error fetching tasks for section:`, error);\r\n  }\r\n},\r\n\r\n  // ----------- Fetche -----------\r\n   async fetchBoardName() {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/board/${this.boardId}/`);\r\n       this.boardName = response.data.name;\r\n     } catch (error) {\r\n       console.error('Error fetching board name:', error);\r\n     }\r\n   },\r\n\r\n   async fetchSections() {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/section/${this.boardId}/sections/`);\r\n       this.sections = response.data;\r\n       for (const section of this.sections) {\r\n         if (!section.tasks) {\r\n           section.tasks = []; // Inicjalizacja pustej tablicy tasków, jeśli nie istnieje\r\n           await this.fetchTasksForSection(section);\r\n         }\r\n       }\r\n     } catch (error) {\r\n       console.error('Error fetching sections:', error);\r\n     }\r\n   },\r\n\r\n   async fetchTasksForSection(section) {\r\n     try {\r\n       const response = await axios.get(`http://127.0.0.1:8000/task/${section.id}/task_list/`);\r\n       section.tasks = response.data;\r\n     } catch (error) {\r\n       console.error(`Error fetching tasks for section:`, error);\r\n     }\r\n   },\r\n   // ----------- Section -----------\r\n   async createSection() {\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n       const response = await axios.post(\r\n         `http://127.0.0.1:8000/section/${this.boardId}/create_section/`,\r\n         { name: this.sectionName, board: this.boardId },\r\n         { headers: { Authorization: `Token ${token}` } }\r\n       );\r\n       console.log('Section created:', response.data);\r\n       this.showModal = false;\r\n       this.fetchSections();\r\n     } catch (error) {\r\n       console.error('Error creating section:', error);\r\n     }\r\n   },\r\n   async updateSection() {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.put(\r\n            `http://127.0.0.1:8000/section/${this.boardId}/update_section/${this.section.id}/`,\r\n            { name: this.sectionName},\r\n         { headers: { Authorization: `Token ${token}` } }\r\n        );\r\n        console.log('Section updated:', response.data);\r\n        this.editModalVisible = false;\r\n        this.fetchSections(); // Ponowne pobranie sekcji po aktualizacji\r\n    } catch (error) {\r\n        console.error('Error updating section:', error);\r\n    }\r\n  },\r\n  async deleteSection(sectionId) {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`http://127.0.0.1:8000/section/delete_section/${sectionId}`, {\r\n        headers: {\r\n          Authorization: `Token ${token}`\r\n        }\r\n      });\r\n      this.fetchSections(); // Odśwież listę sekcji po usunięciu\r\n      this.deleteConfirmationModalVisibleSection = false;\r\n    } catch (error) {\r\n      console.error('Error deleting section:', error);\r\n    }\r\n  },\r\n\r\n  // ----------- MODAL DLA SEKCJI -----------\r\n  openEditModalSection(section) {\r\n    this.editSectionModalVisible = true;\r\n    this.editedSectionId = section.id;\r\n    this.editedSectionName = section.name;\r\n  },\r\n\r\n  closeEditModalSection() {\r\n    this.editSectionModalVisible = false;\r\n  },\r\n\r\n  confirmDeleteSection(section) {\r\n      this.confirmedDeleteSectionId = section.id;\r\n      this.deleteConfirmationModalVisibleSection = true;\r\n  },\r\n\r\n    closeDeleteConfirmationModalSection() {\r\n      this.deleteConfirmationModalVisibleSection = false;\r\n    },\r\n\r\n  // ----------- TASKI -----------\r\n  async createTask() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const currentDate = new Date();\r\n        const response = await axios.post(\r\n          'http://127.0.0.1:8000/task/create/',\r\n          { name: this.taskName, description: this.description, section: this.selectedSectionId, create_date: currentDate, due_date: this.dueDate,  },\r\n          { headers: { Authorization: `Token ${token}` } }\r\n        );\r\n        console.log('Task created:', response.data);\r\n        this.taskModalVisible = false;\r\n        this.fetchSections(); // Po utworzeniu zadania odśwież listę sekcji, aby wyświetlić nowe zadanie\r\n      } catch (error) {\r\n        console.error('Error creating task:', error.response);\r\n      }\r\n    },\r\n\r\n   async editTask(selectedTask) {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      //const currentDate = new Date();\r\n      const response = await axios.put(\r\n        `http://127.0.0.1:8000/task/update_task/${this.selectedTask.id}`,  \r\n        { \r\n          name: this.taskName, \r\n          description: this.description, \r\n          section: this.selectedSectionId,\r\n          due_date: this.dueDate,\r\n        },\r\n        { headers: { Authorization: `Token ${token}` } }\r\n      );\r\n\r\n      console.log('Task updated:', response.data);\r\n      window.location.reload();\r\n      this.fetchTasksForSection();\r\n      // Tutaj możesz dodać odpowiednią obsługę po udanej aktualizacji zadania, np. odświeżenie listy zadań\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  },\r\n  async deleteTask(taskId) {\r\n    try {\r\n      await axios.delete(`http://127.0.0.1:8000/task/delete_task/${taskId}`,);\r\n      this.fetchTasksForSection(); // Aktualizuj listę zadań po usunięciu\r\n      window.location.reload();\r\n    } catch (error){\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  },\r\n    // ----------- MODALE TASKI -----------\r\n  // Add Task\r\n  // wyswietlenie\r\n  openAddTaskModal(section) {\r\n    this.taskModalVisible = true;\r\n    this.sectionName = section.sectionName;\r\n    this.selectedSectionId = section.id;\r\n  },\r\n  // zamkniecie\r\n  closeAddTaskModal() {\r\n    this.taskModalVisible = false;\r\n  },\r\n  // Delete Task\r\n  showTaskDetails(task) {\r\n    this.selectedTask = task;\r\n  },\r\n  // Edit Task\r\n  openEditModalTask(task) {\r\n  this.editTaskModalVisible = true;\r\n  this.taskName = task.name;\r\n  this.description = task.description; \r\n  this.sectionName = task.sectionName;  // Check if this property is correct\r\n  this.dueDate = task.dueDate; // Check if this property is correct\r\n},\r\n\r\n  closeTaskEditModal() {\r\n    this.editTaskModalVisible = false; \r\n  },\r\n  // Details Task\r\n  closeTaskDetailsModal() {\r\n    this.selectedTask = false;\r\n  },\r\n  } \r\n};\r\n</script>\r\n\r\n\r\n<style scoped src=\"../../style/SectionTable.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}