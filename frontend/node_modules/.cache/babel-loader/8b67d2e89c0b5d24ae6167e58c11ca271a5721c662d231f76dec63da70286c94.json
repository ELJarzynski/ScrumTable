{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/szymo/Desktop/gole baby i milfy/studia/scrum/test17kwietnia/ScrumTable-visi-DziarskiQuartet/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      editedBoardName: '',\n      editedBoardId: null,\n      editBoardModalVisible: false,\n      editedBoardDescription: '',\n      editedBoardDueDate: '',\n      boards: [],\n      boardUserCounts: {},\n      userModalActive: false,\n      currentUserList: [],\n      currentBoardId: null,\n      userId: null,\n      newUserId: '',\n      addUserModalActive: false,\n      newUserEmail: '',\n      deleteBoardModalVisible: false,\n      boardToDeleteId: null\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBoards();\n  },\n  methods: {\n    // -------------------- FETCHE --------------------\n    fetchBoards: function fetchBoards() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _iterator, _step, board;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://127.0.0.1:8000/board/list_board/');\n            case 3:\n              response = _context.sent;\n              _this.boards = response.data;\n\n              // Po pobraniu listy tablic, dla każdej tablicy pobierz liczbę użytkowników\n              _iterator = _createForOfIteratorHelper(_this.boards);\n              _context.prev = 6;\n              _iterator.s();\n            case 8:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 14;\n                break;\n              }\n              board = _step.value;\n              _context.next = 12;\n              return _this.fetchBoardUsers(board.id);\n            case 12:\n              _context.next = 8;\n              break;\n            case 14:\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](6);\n              _iterator.e(_context.t0);\n            case 19:\n              _context.prev = 19;\n              _iterator.f();\n              return _context.finish(19);\n            case 22:\n              _context.next = 27;\n              break;\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](0);\n              console.error('Error fetching boards:', _context.t1);\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 24], [6, 16, 19, 22]]);\n      }))();\n    },\n    fetchBoardUsers: function fetchBoardUsers(boardId) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/users/\"));\n            case 3:\n              response = _context2.sent;\n              _this2.boardUserCounts[boardId] = response.data.length;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error fetching board users:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    fetchBoardUsersList: function fetchBoardUsersList(boardId) {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/users/\"));\n            case 3:\n              response = _context3.sent;\n              _this3.currentUserList = response.data;\n              console.log('Current User List:', _this3.currentUserList); // Dodaj to logowanie\n              // Przypisz pierwszego użytkownika z listy jako aktualnie wybranego użytkownika\n              if (response.data.length > 0) {\n                _this3.userId = response.data[0].user_id;\n              }\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error fetching board users:', _context3.t0);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 9]]);\n      }))();\n    },\n    // -------------------- BOARDS --------------------\n    // Update\n    updateBoard: function updateBoard() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.put(\"http://127.0.0.1:8000/board/\".concat(_this4.editedBoardId, \"/edit_board/\"), {\n                name: _this4.editedBoardName,\n                description: _this4.editedBoardDescription,\n                due_date: _this4.editedBoardDueDate\n              });\n            case 3:\n              console.log('Board updated successfully');\n              _this4.closeEditBoardModal();\n              _this4.fetchBoards();\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error updating board:', _context4.t0);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 8]]);\n      }))();\n    },\n    // Delete\n    deleteBoard: function deleteBoard(boardId) {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              try {\n                _this5.deleteBoardModalVisible = true;\n                _this5.boardToDeleteId = boardId;\n              } catch (error) {\n                console.error('Error deleting board:', error);\n              }\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    confirmDeleteBoard: function confirmDeleteBoard() {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/board/\".concat(_this6.boardToDeleteId, \"/delete_board/\"));\n            case 3:\n              _this6.fetchBoards();\n              _this6.closeDeleteBoardModal();\n              _context6.next = 10;\n              break;\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error confirming deletion of board:', _context6.t0);\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 7]]);\n      }))();\n    },\n    cancelDeleteBoard: function cancelDeleteBoard() {\n      this.closeDeleteBoardModal();\n    },\n    closeDeleteBoardModal: function closeDeleteBoardModal() {\n      this.deleteBoardModalVisible = false;\n      this.boardToDeleteId = null;\n    },\n    // Przekierowanie do widoku Sekcji\n    openBoard: function openBoard(boardId) {\n      this.$router.push(\"/section-table/\".concat(boardId, \"/create_section\"));\n    },\n    // Edit Board\n    openEditBoardModal: function openEditBoardModal(board) {\n      this.editBoardModalVisible = true;\n      this.editedBoardId = board.id;\n      this.editedBoardName = board.name;\n      this.editedBoardDescription = board.description;\n      this.editedBoardDueDate = board.due_date;\n    },\n    closeEditBoardModal: function closeEditBoardModal() {\n      this.editBoardModalVisible = false;\n    },\n    // ------------------------ USER ------------------------\n    // Add User\n    findAndAddUser: function findAndAddUser() {\n      var _this7 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var response, userId;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return axios.get(\"http://127.0.0.1:8000/user/find/?email=\".concat(_this7.newUserEmail));\n            case 3:\n              response = _context7.sent;\n              if (!response.data.user_id) {\n                _context7.next = 11;\n                break;\n              }\n              userId = response.data.user_id; // Dodanie użytkownika do tablicy za pomocą ID\n              _context7.next = 8;\n              return _this7.addUserToBoard(userId);\n            case 8:\n              // Czyszczenie pola adresu e-mail po dodaniu użytkownika\n              _this7.newUserEmail = '';\n              _context7.next = 12;\n              break;\n            case 11:\n              console.log('No user found with the provided email.');\n            case 12:\n              _context7.next = 17;\n              break;\n            case 14:\n              _context7.prev = 14;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('Error finding and adding user:', _context7.t0);\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 14]]);\n      }))();\n    },\n    addUserToBoard: function addUserToBoard(userId) {\n      var _this8 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var boardId;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              boardId = _this8.currentBoardId; // Dodanie użytkownika do tablicy za pomocą ID\n              _context8.next = 4;\n              return axios.post(\"http://127.0.0.1:8000/board/\".concat(boardId, \"/add_user/\"), {\n                user: userId\n              });\n            case 4:\n              _context8.next = 6;\n              return _this8.fetchBoardUsersList(boardId);\n            case 6:\n              // Odświeżenie listy tablic\n              _this8.fetchBoards();\n\n              // Zamknięcie modala po dodaniu użytkownika\n              _this8.closeAddUserModal();\n              _context8.next = 13;\n              break;\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error('Error adding user to board:', _context8.t0);\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 10]]);\n      }))();\n    },\n    // Delete\n    deleteUserFromBoard: function deleteUserFromBoard(boardId, user) {\n      var _this9 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var userId;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              console.log(\"User:\", user); // Dodajmy to logowanie\n              userId = user.user_detail.id; // Pobierz user_id z obiektu user\n              // Wykonanie zapytania HTTP do usunięcia użytkownika z tablicy\n              _context9.next = 5;\n              return axios[\"delete\"](\"http://127.0.0.1:8000/board/\".concat(boardId, \"/delete_user/\").concat(userId));\n            case 5:\n              _context9.next = 7;\n              return _this9.fetchBoardUsersList(boardId);\n            case 7:\n              _context9.next = 12;\n              break;\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.error('Error deleting user from board:', _context9.t0);\n            case 12:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[0, 9]]);\n      }))();\n    },\n    removeUserFromBoard: function removeUserFromBoard(boardId, user) {\n      var _this10 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var confirmed;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              console.log(\"User:\", user); // Sprawdźmy, co jest w obiekcie user\n              confirmed = window.confirm('Are you sure you want to remove this user from the board?');\n              if (!confirmed) {\n                _context10.next = 5;\n                break;\n              }\n              _context10.next = 5;\n              return _this10.deleteUserFromBoard(boardId, user);\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }))();\n    },\n    // zliczanie ilosci ziutków przypisanych do tablicy\n    getBoardUserCount: function getBoardUserCount(boardId) {\n      return this.boardUserCounts[boardId] || 0;\n    },\n    // Wyswietlanie Userów\n    openUserModal: function openUserModal(boardId) {\n      this.userModalActive = true;\n      this.currentBoardId = boardId;\n      this.fetchBoardUsersList(boardId); // Dodaj to wywołanie, aby pobrać użytkowników tablicy\n    },\n    closeUserModal: function closeUserModal() {\n      this.userModalActive = false;\n      this.currentBoardId = null;\n      this.currentUserList = [];\n    },\n    // Dodawanie Userów\n    openAddUserModal: function openAddUserModal() {\n      this.addUserModalActive = true;\n    },\n    closeAddUserModal: function closeAddUserModal() {\n      this.addUserModalActive = false;\n      this.newUserId = '';\n    }\n  },\n  computed: {\n    boardTotalLength: function boardTotalLength() {\n      return this.boards.length;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","editedBoardName","editedBoardId","editBoardModalVisible","editedBoardDescription","editedBoardDueDate","boards","boardUserCounts","userModalActive","currentUserList","currentBoardId","userId","newUserId","addUserModalActive","newUserEmail","deleteBoardModalVisible","boardToDeleteId","mounted","fetchBoards","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_iterator","_step","board","wrap","_callee$","_context","prev","next","get","sent","_createForOfIteratorHelper","s","n","done","value","fetchBoardUsers","id","t0","e","f","finish","t1","console","error","stop","boardId","_this2","_callee2","_callee2$","_context2","concat","length","fetchBoardUsersList","_this3","_callee3","_callee3$","_context3","log","user_id","updateBoard","_this4","_callee4","_callee4$","_context4","put","name","description","due_date","closeEditBoardModal","deleteBoard","_this5","_callee5","_callee5$","_context5","confirmDeleteBoard","_this6","_callee6","_callee6$","_context6","closeDeleteBoardModal","cancelDeleteBoard","openBoard","$router","push","openEditBoardModal","findAndAddUser","_this7","_callee7","_callee7$","_context7","addUserToBoard","_this8","_callee8","_callee8$","_context8","post","user","closeAddUserModal","deleteUserFromBoard","_this9","_callee9","_callee9$","_context9","user_detail","removeUserFromBoard","_this10","_callee10","confirmed","_callee10$","_context10","window","confirm","getBoardUserCount","openUserModal","closeUserModal","openAddUserModal","computed","boardTotalLength"],"sources":["C:\\Users\\szymo\\Desktop\\gole baby i milfy\\studia\\scrum\\test17kwietnia\\ScrumTable-visi-DziarskiQuartet\\frontend\\src\\views\\Tables.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"page-board\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Boards</h1>\r\n      </div>\r\n      <div class=\"column is-12 box\">\r\n        <table class=\"table is-fullwidth\" v-if=\"boardTotalLength\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>Create Date</th>\r\n              <th>Due Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in boards\" :key=\"board.id\">\r\n              <td>{{ board.name }}</td>\r\n              <td>{{ board.description }}</td>\r\n              <td>{{ board.create_date }}</td>\r\n              <td>{{ board.due_date }}</td>\r\n              <td>\r\n                <button @click=\"deleteBoard(board.id)\" class=\"button is-danger is-margin-right\" style=\"margin-right: 10px;\">Delete</button>\r\n                <button @click=\"openEditBoardModal(board)\" class=\"button is-info is-margin-right\" style=\"margin-right: 10px;\">Edit</button>\r\n                <button @click=\"openBoard(board.id)\" class=\"button is-primary is-margin-right\" style=\"margin-right: 10px;\">Open</button>\r\n                <span @click=\"openUserModal(board.id)\" style=\"cursor: pointer;\" >\r\n                  <i class=\"fas fa-users\"></i> {{ getBoardUserCount(board.id) }}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p v-else>You don't have any boards...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal do usuwania tablicy -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"deleteBoardModalVisible\" class=\"modal-delete\">\r\n        <div class=\"modal-content-delete\">\r\n          <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Delete Board</h2>\r\n          <p>Are you sure you want to delete this board?</p>\r\n          <div class=\"buttons\">\r\n            <button @click=\"confirmDeleteBoard\" class=\"button is-danger is-margin-right\">Yes</button>\r\n            <button @click=\"cancelDeleteBoard\" class=\"button is-primary\">No</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n    <!-- Modal do edycji tablicy -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"editBoardModalVisible\" class=\"modal-edit\">\r\n        <div class=\"modal-content-edit\">\r\n          <span class=\"close-edit\" @click=\"closeEditBoardModal\">&times;</span>\r\n          <h2 style=\"margin-bottom: 15px; font-weight: bold; font-size: 30px;\">Edit Board</h2>\r\n          <form @submit.prevent=\"updateBoard\">\r\n            <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n              <label for=\"editBoardName\" style=\"margin-right: 15px;\" >Board Name:</label>\r\n              <input type=\"text\" id=\"editBoardName\" v-model=\"editedBoardName\" class=\"form-control\">\r\n            </div>\r\n            <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n              <label for=\"editBoardDescription\" style=\"margin-right: 15px;\">Description:</label>\r\n              <textarea type=\"description\" id=\"editBoardDescription\" v-model=\"editedBoardDescription\" class=\"form-control textarea-description\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\" style=\"margin-bottom: 15px; font-weight: bold; font-size: 15px;\">\r\n              <label for=\"editBoardDueDate\" style=\"margin-right: 15px;\">Due Date:</label>\r\n              <input type=\"date\" id=\"editBoardDueDate\" v-model=\"editedBoardDueDate\" class=\"form-control\">\r\n            </div>\r\n            <button type=\"submit\" class=\"button is-primary\">Update Board</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n\r\n     <!-- Modal for User List -->\r\n    <div class=\"modal\" :class=\"{ 'is-active': userModalActive }\">\r\n      <div class=\"modal-background\" @click=\"closeUserModal\"></div>\r\n      <div class=\"modal-card\">\r\n        <header class=\"modal-card-head\">\r\n          <p class=\"modal-card-title\">User List</p>\r\n          <button class=\"delete\" aria-label=\"close\" @click=\"closeUserModal\"></button>\r\n        </header>\r\n        <section class=\"modal-card-body\">\r\n          <ul>\r\n            <li v-for=\"user in currentUserList\" :key=\"user.user_detail.id\" style=\"color: white;\">\r\n              ID: {{ user.user_detail.id }} | Email: {{ user.user_detail.email }}\r\n              <button @click=\"removeUserFromBoard(currentBoardId, user)\" class=\"button is-danger is-small\">Remove</button>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n        <footer class=\"modal-card-foot\">\r\n          <button class=\"button is-success\" @click=\"openAddUserModal\">Add User</button>\r\n          <button class=\"button\" @click=\"closeUserModal\">Cancel</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal for adding a new user -->\r\n    <div class=\"modal\" :class=\"{ 'is-active': addUserModalActive }\">\r\n      <div class=\"modal-background\" @click=\"closeAddUserModal\"></div>\r\n        <div class=\"modal-content\">\r\n          <div class=\"box\">\r\n          <h2 class=\"subtitle\">Add User to Board</h2>\r\n          <div class=\"field\">\r\n            <label class=\"label\">User Email</label>\r\n            <div class=\"control\">\r\n              <input class=\"input\" type=\"text\" v-model=\"newUserEmail\" placeholder=\"Enter user email\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <button class=\"button is-success\" @click=\"findAndAddUser\">Add User</button>\r\n            <button class=\"button\" @click=\"closeAddUserModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      editedBoardName: '',\r\n      editedBoardId: null,\r\n      editBoardModalVisible: false,\r\n      editedBoardDescription: '',\r\n      editedBoardDueDate: '',\r\n      boards: [],\r\n      boardUserCounts: {},\r\n      userModalActive: false,\r\n      currentUserList: [],\r\n      currentBoardId: null,\r\n      userId: null,\r\n      newUserId: '',\r\n      addUserModalActive: false,\r\n      newUserEmail: '',\r\n      deleteBoardModalVisible: false,\r\n      boardToDeleteId: null\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchBoards();\r\n  },\r\n\r\n  methods: {\r\n    // -------------------- FETCHE --------------------\r\n    async fetchBoards() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/board/list_board/');\r\n        this.boards = response.data;\r\n\r\n        // Po pobraniu listy tablic, dla każdej tablicy pobierz liczbę użytkowników\r\n        for (const board of this.boards) {\r\n          await this.fetchBoardUsers(board.id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching boards:', error);\r\n      }\r\n    },\r\n\r\n    async fetchBoardUsers(boardId) {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/board/${boardId}/users/`);\r\n        this.boardUserCounts[boardId] = response.data.length;\r\n      } catch (error) {\r\n        console.error('Error fetching board users:', error);\r\n      }\r\n    },\r\n\r\n    async fetchBoardUsersList(boardId) {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/board/${boardId}/users/`);\r\n        this.currentUserList = response.data;\r\n        console.log('Current User List:', this.currentUserList); // Dodaj to logowanie\r\n        // Przypisz pierwszego użytkownika z listy jako aktualnie wybranego użytkownika\r\n        if (response.data.length > 0) {\r\n          this.userId = response.data[0].user_id;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching board users:', error);\r\n      }\r\n    },\r\n\r\n    // -------------------- BOARDS --------------------\r\n    // Update\r\n    async updateBoard() {\r\n      try {\r\n        await axios.put(`http://127.0.0.1:8000/board/${this.editedBoardId}/edit_board/`, \r\n          { name: this.editedBoardName,\r\n          description: this.editedBoardDescription,\r\n          due_date: this.editedBoardDueDate }\r\n        );\r\n        console.log('Board updated successfully');\r\n        this.closeEditBoardModal();\r\n        this.fetchBoards();\r\n      } catch (error) {\r\n        console.error('Error updating board:', error);\r\n      }\r\n    },\r\n\r\n    // Delete\r\n    async deleteBoard(boardId) {\r\n      try {\r\n        this.deleteBoardModalVisible = true;\r\n        this.boardToDeleteId = boardId;\r\n      } catch (error) {\r\n        console.error('Error deleting board:', error);\r\n      } \r\n    },\r\n\r\n    async confirmDeleteBoard() {\r\n      try {\r\n        await axios.delete(`http://127.0.0.1:8000/board/${this.boardToDeleteId}/delete_board/`);\r\n        this.fetchBoards();\r\n        this.closeDeleteBoardModal();\r\n      } catch (error) {\r\n        console.error('Error confirming deletion of board:', error);\r\n      }\r\n    },\r\n\r\n    cancelDeleteBoard() {\r\n      this.closeDeleteBoardModal();\r\n    },\r\n\r\n    closeDeleteBoardModal() {\r\n      this.deleteBoardModalVisible = false;\r\n      this.boardToDeleteId = null;\r\n    },\r\n\r\n\r\n    // Przekierowanie do widoku Sekcji\r\n    openBoard(boardId) {\r\n      this.$router.push(`/section-table/${boardId}/create_section`);\r\n    },\r\n\r\n    // Edit Board\r\n    openEditBoardModal(board) {\r\n      this.editBoardModalVisible = true;\r\n      this.editedBoardId = board.id;\r\n      this.editedBoardName = board.name;\r\n      this.editedBoardDescription = board.description;\r\n      this.editedBoardDueDate = board.due_date;\r\n    },\r\n\r\n    closeEditBoardModal() {\r\n      this.editBoardModalVisible = false;\r\n    },\r\n\r\n\r\n    // ------------------------ USER ------------------------\r\n    // Add User\r\n    async findAndAddUser() {\r\n      try {\r\n        // Wyszukanie użytkownika na podstawie adresu e-mail\r\n        const response = await axios.get(`http://127.0.0.1:8000/user/find/?email=${this.newUserEmail}`);\r\n        if (response.data.user_id) {\r\n          const userId = response.data.user_id;\r\n\r\n          // Dodanie użytkownika do tablicy za pomocą ID\r\n          await this.addUserToBoard(userId);\r\n\r\n          // Czyszczenie pola adresu e-mail po dodaniu użytkownika\r\n          this.newUserEmail = '';\r\n        } else {\r\n          console.log('No user found with the provided email.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error finding and adding user:', error);\r\n      }\r\n    },\r\n\r\n    async addUserToBoard(userId) {\r\n      try {\r\n        const boardId = this.currentBoardId;\r\n\r\n        // Dodanie użytkownika do tablicy za pomocą ID\r\n        await axios.post(`http://127.0.0.1:8000/board/${boardId}/add_user/`, { user: userId });\r\n\r\n        // Pobranie zaktualizowanej listy użytkowników po dodaniu nowego\r\n        await this.fetchBoardUsersList(boardId);\r\n\r\n        // Odświeżenie listy tablic\r\n        this.fetchBoards();\r\n\r\n        // Zamknięcie modala po dodaniu użytkownika\r\n        this.closeAddUserModal();\r\n      } catch (error) {\r\n        console.error('Error adding user to board:', error);\r\n      }\r\n    },\r\n\r\n    // Delete\r\n    async deleteUserFromBoard(boardId, user) {\r\n      try {\r\n        console.log(\"User:\", user); // Dodajmy to logowanie\r\n        const userId = user.user_detail.id; // Pobierz user_id z obiektu user\r\n        // Wykonanie zapytania HTTP do usunięcia użytkownika z tablicy\r\n        await axios.delete(`http://127.0.0.1:8000/board/${boardId}/delete_user/${userId}`);\r\n\r\n        // Pobranie zaktualizowanej listy użytkowników po usunięciu\r\n        await this.fetchBoardUsersList(boardId);\r\n      } catch (error) {\r\n        console.error('Error deleting user from board:', error);\r\n      }\r\n    },\r\n\r\n    async removeUserFromBoard(boardId, user) {\r\n      console.log(\"User:\", user); // Sprawdźmy, co jest w obiekcie user\r\n      const confirmed = window.confirm('Are you sure you want to remove this user from the board?');\r\n      if (confirmed) {\r\n        await this.deleteUserFromBoard(boardId, user);\r\n      }\r\n    },\r\n\r\n    // zliczanie ilosci ziutków przypisanych do tablicy\r\n    getBoardUserCount(boardId) {\r\n      return this.boardUserCounts[boardId] || 0;\r\n    },\r\n\r\n    // Wyswietlanie Userów\r\n    openUserModal(boardId) {\r\n      this.userModalActive = true;\r\n      this.currentBoardId = boardId;\r\n      this.fetchBoardUsersList(boardId); // Dodaj to wywołanie, aby pobrać użytkowników tablicy\r\n    },\r\n\r\n    closeUserModal() {\r\n      this.userModalActive = false;\r\n      this.currentBoardId = null;\r\n      this.currentUserList = [];\r\n    },\r\n\r\n    // Dodawanie Userów\r\n    openAddUserModal() {\r\n      this.addUserModalActive = true;\r\n    },\r\n\r\n    closeAddUserModal() {\r\n      this.addUserModalActive = false;\r\n      this.newUserId = ''; \r\n    },\r\n  },\r\n\r\n  computed: {\r\n    boardTotalLength() {\r\n      return this.boards.length;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.modal-edit {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  overflow: auto;\r\n}\r\n\r\n.modal-content-edit {\r\n  margin: auto;\r\n  padding: 20px;\r\n  width: 50%; / zmieniamy szerokość modalu edycji /\r\n  max-height: 80%; / maksymalna wysokość modalu /\r\n  overflow-y: auto; / dodajemy pionowy scroll w przypadku długich treści /\r\n  background-color: #d4d4d6; / Zaktualizowany kolor tła /\r\n  border-radius: 5px;\r\n  border: 5px solid #007bff; / Zaktualizowany kolor ramki /\r\n  text-align: center;\r\n  color: #000;\r\n  opacity: 0.9;\r\n}\r\n\r\n.close-edit {\r\n  color: #aaaaaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close-edit:hover,\r\n.close-edit:focus {\r\n  color: #000;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  overflow: auto;\r\n\r\n}\r\n.modal-card-body {\r\n  color: white;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}